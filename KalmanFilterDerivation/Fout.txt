F(1, 1)
0




F(1, 2)
0




F(1, 3)
0




F(1, 4)
0




F(1, 5)
1




F(1, 6)
0




F(1, 7)
0




F(1, 8)
0




F(2, 1)
0




F(2, 2)
0




F(2, 3)
0




F(2, 4)
0




F(2, 5)
0




F(2, 6)
1




F(2, 7)
0




F(2, 8)
0




F(3, 1)
0




F(3, 2)
0




F(3, 3)
0




F(3, 4)
0




F(3, 5)
0




F(3, 6)
0




F(3, 7)
1




F(3, 8)
0




F(4, 1)
0




F(4, 2)
0




F(4, 3)
0




F(4, 4)
0




F(4, 5)
0




F(4, 6)
0




F(4, 7)
0




F(4, 8)
1




F(5, 1)
- (I11*I22*b2*d2*q2^2 - I11*I22*b1*d1*q2^2 - I11*I33*b1*d1*q3^2 + I11*I33*b3*d3*q3^2 - I22*I33*b2*d2*q4^2 - I22*I33*b3*d3*q4^2 + 3*I11*I22*I33*q1^2*q2_dot^2 + 3*I11*I22*I33*q1^2*q3_dot^2 + I11*I22*I33*q2^2*q2_dot^2 + 3*I11*I22*I33*q1^2*q4_dot^2 + I11*I22*I33*q2^2*q3_dot^2 + I11*I22*I33*q3^2*q2_dot^2 + I11*I22*I33*q2^2*q4_dot^2 + I11*I22*I33*q3^2*q3_dot^2 + I11*I22*I33*q4^2*q2_dot^2 + I11*I22*I33*q3^2*q4_dot^2 + I11*I22*I33*q4^2*q3_dot^2 + I11*I22*I33*q4^2*q4_dot^2 + I11*I22*b1*d2*q1*q2 + I11*I22*b2*d1*q1*q2 + I11*I22*b3*d1*q2*q4 + I11*I22*b3*d2*q2*q3 + I11*I33*b1*d3*q1*q3 + I11*I33*b3*d1*q1*q3 - I11*I33*b2*d1*q3*q4 + I11*I33*b2*d3*q2*q3 - I22*I33*b1*d2*q3*q4 + I22*I33*b1*d3*q2*q4 - I22*I33*b2*d3*q1*q4 + I22*I33*b3*d2*q1*q4 - 2*I11*I22*I33*q1*q2*q1_dot*q2_dot - 2*I11*I22*I33*q1*q3*q1_dot*q3_dot - 2*I11*I22*I33*q1*q4*q1_dot*q4_dot)/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) - (q1*(I11*I22*b1*d2*q2^3 + I11*I22*b2*d1*q2^3 + I11*I33*b1*d3*q3^3 + I11*I33*b3*d1*q3^3 - I22*I33*b2*d3*q4^3 + I22*I33*b3*d2*q4^3 - 2*I11*I22*I33*q1^3*q2_dot^2 - 2*I11*I22*I33*q1^3*q3_dot^2 - 2*I11*I22*I33*q1^3*q4_dot^2 - 2*I11*I22*I33*q1*q2^2*q2_dot^2 - 2*I11*I22*I33*q1*q2^2*q3_dot^2 - 2*I11*I22*I33*q1*q3^2*q2_dot^2 - 2*I11*I22*I33*q1*q2^2*q4_dot^2 - 2*I11*I22*I33*q1*q3^2*q3_dot^2 - 2*I11*I22*I33*q1*q4^2*q2_dot^2 - 2*I11*I22*I33*q1*q3^2*q4_dot^2 - 2*I11*I22*I33*q1*q4^2*q3_dot^2 - 2*I11*I22*I33*q1*q4^2*q4_dot^2 + 2*I11*I22*I33*q2^3*q1_dot*q2_dot + 2*I11*I22*I33*q3^3*q1_dot*q3_dot + 2*I11*I22*I33*q4^3*q1_dot*q4_dot + 2*I11*I22*b1*d1*q1*q2^2 - I11*I22*b1*d2*q1^2*q2 - I11*I22*b2*d1*q1^2*q2 - 2*I11*I22*b2*d2*q1*q2^2 + I11*I22*b1*d2*q2*q3^2 - I11*I22*b2*d1*q2*q3^2 - I11*I22*b1*d2*q2*q4^2 + I11*I22*b2*d1*q2*q4^2 + 2*I11*I22*b3*d1*q2^2*q3 - 2*I11*I22*b3*d2*q2^2*q4 + 2*I11*I33*b1*d1*q1*q3^2 - I11*I33*b1*d3*q1^2*q3 + 2*I11*I33*b2*d1*q2*q3^2 - I11*I33*b3*d1*q1^2*q3 + I11*I33*b1*d3*q2^2*q3 - I11*I33*b3*d1*q2^2*q3 - 2*I11*I33*b3*d3*q1*q3^2 - I11*I33*b1*d3*q3*q4^2 + I11*I33*b3*d1*q3*q4^2 + 2*I11*I33*b2*d3*q3^2*q4 - 2*I22*I33*b1*d2*q2*q4^2 + 2*I22*I33*b2*d2*q1*q4^2 + I22*I33*b2*d3*q1^2*q4 - I22*I33*b3*d2*q1^2*q4 - 2*I22*I33*b1*d3*q3*q4^2 - I22*I33*b2*d3*q2^2*q4 - I22*I33*b3*d2*q2^2*q4 + 2*I22*I33*b3*d3*q1*q4^2 + I22*I33*b2*d3*q3^2*q4 + I22*I33*b3*d2*q3^2*q4 + 2*I11*I22*b1*d1*q2*q3*q4 - 2*I11*I22*b3*d1*q1*q2*q4 - 2*I11*I22*b3*d2*q1*q2*q3 + 2*I11*I22*b2*d2*q2*q3*q4 - 2*I11*I33*b1*d1*q2*q3*q4 + 2*I11*I33*b2*d1*q1*q3*q4 - 2*I11*I33*b2*d3*q1*q2*q3 - 2*I11*I33*b3*d3*q2*q3*q4 + 2*I22*I33*b1*d2*q1*q3*q4 - 2*I22*I33*b1*d3*q1*q2*q4 + 2*I22*I33*b2*d2*q2*q3*q4 - 2*I22*I33*b3*d3*q2*q3*q4 + 2*I11*I22*I33*q1^2*q2*q1_dot*q2_dot + 2*I11*I22*I33*q2*q3^2*q1_dot*q2_dot + 2*I11*I22*I33*q1^2*q3*q1_dot*q3_dot + 2*I11*I22*I33*q2*q4^2*q1_dot*q2_dot + 2*I11*I22*I33*q2^2*q3*q1_dot*q3_dot + 2*I11*I22*I33*q1^2*q4*q1_dot*q4_dot + 2*I11*I22*I33*q3*q4^2*q1_dot*q3_dot + 2*I11*I22*I33*q2^2*q4*q1_dot*q4_dot + 2*I11*I22*I33*q3^2*q4*q1_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(5, 2)
- (I11*I22*b1*d2*q1^2 + I11*I22*b2*d1*q1^2 - 3*I11*I22*b1*d2*q2^2 - 3*I11*I22*b2*d1*q2^2 - I11*I22*b1*d2*q3^2 + I11*I22*b2*d1*q3^2 + I11*I22*b1*d2*q4^2 - I11*I22*b2*d1*q4^2 - 2*I11*I33*b2*d1*q3^2 + 2*I22*I33*b1*d2*q4^2 - 4*I11*I22*b1*d1*q1*q2 + 4*I11*I22*b2*d2*q1*q2 - 2*I11*I22*b1*d1*q3*q4 + 2*I11*I22*b3*d1*q1*q4 - 4*I11*I22*b3*d1*q2*q3 + 2*I11*I22*b3*d2*q1*q3 - 2*I11*I22*b2*d2*q3*q4 + 4*I11*I22*b3*d2*q2*q4 + 2*I11*I33*b1*d1*q3*q4 - 2*I11*I33*b1*d3*q2*q3 + 2*I11*I33*b2*d3*q1*q3 + 2*I11*I33*b3*d1*q2*q3 + 2*I11*I33*b3*d3*q3*q4 + 2*I22*I33*b1*d3*q1*q4 - 2*I22*I33*b2*d2*q3*q4 + 2*I22*I33*b2*d3*q2*q4 + 2*I22*I33*b3*d2*q2*q4 + 2*I22*I33*b3*d3*q3*q4 + 4*I11*I22*I33*q1*q2*q2_dot^2 + 4*I11*I22*I33*q1*q2*q3_dot^2 + 4*I11*I22*I33*q1*q2*q4_dot^2 - 2*I11*I22*I33*q1^2*q1_dot*q2_dot - 6*I11*I22*I33*q2^2*q1_dot*q2_dot - 2*I11*I22*I33*q3^2*q1_dot*q2_dot - 2*I11*I22*I33*q4^2*q1_dot*q2_dot - 4*I11*I22*I33*q2*q3*q1_dot*q3_dot - 4*I11*I22*I33*q2*q4*q1_dot*q4_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) - (q2*(I11*I22*b1*d2*q2^3 + I11*I22*b2*d1*q2^3 + I11*I33*b1*d3*q3^3 + I11*I33*b3*d1*q3^3 - I22*I33*b2*d3*q4^3 + I22*I33*b3*d2*q4^3 - 2*I11*I22*I33*q1^3*q2_dot^2 - 2*I11*I22*I33*q1^3*q3_dot^2 - 2*I11*I22*I33*q1^3*q4_dot^2 - 2*I11*I22*I33*q1*q2^2*q2_dot^2 - 2*I11*I22*I33*q1*q2^2*q3_dot^2 - 2*I11*I22*I33*q1*q3^2*q2_dot^2 - 2*I11*I22*I33*q1*q2^2*q4_dot^2 - 2*I11*I22*I33*q1*q3^2*q3_dot^2 - 2*I11*I22*I33*q1*q4^2*q2_dot^2 - 2*I11*I22*I33*q1*q3^2*q4_dot^2 - 2*I11*I22*I33*q1*q4^2*q3_dot^2 - 2*I11*I22*I33*q1*q4^2*q4_dot^2 + 2*I11*I22*I33*q2^3*q1_dot*q2_dot + 2*I11*I22*I33*q3^3*q1_dot*q3_dot + 2*I11*I22*I33*q4^3*q1_dot*q4_dot + 2*I11*I22*b1*d1*q1*q2^2 - I11*I22*b1*d2*q1^2*q2 - I11*I22*b2*d1*q1^2*q2 - 2*I11*I22*b2*d2*q1*q2^2 + I11*I22*b1*d2*q2*q3^2 - I11*I22*b2*d1*q2*q3^2 - I11*I22*b1*d2*q2*q4^2 + I11*I22*b2*d1*q2*q4^2 + 2*I11*I22*b3*d1*q2^2*q3 - 2*I11*I22*b3*d2*q2^2*q4 + 2*I11*I33*b1*d1*q1*q3^2 - I11*I33*b1*d3*q1^2*q3 + 2*I11*I33*b2*d1*q2*q3^2 - I11*I33*b3*d1*q1^2*q3 + I11*I33*b1*d3*q2^2*q3 - I11*I33*b3*d1*q2^2*q3 - 2*I11*I33*b3*d3*q1*q3^2 - I11*I33*b1*d3*q3*q4^2 + I11*I33*b3*d1*q3*q4^2 + 2*I11*I33*b2*d3*q3^2*q4 - 2*I22*I33*b1*d2*q2*q4^2 + 2*I22*I33*b2*d2*q1*q4^2 + I22*I33*b2*d3*q1^2*q4 - I22*I33*b3*d2*q1^2*q4 - 2*I22*I33*b1*d3*q3*q4^2 - I22*I33*b2*d3*q2^2*q4 - I22*I33*b3*d2*q2^2*q4 + 2*I22*I33*b3*d3*q1*q4^2 + I22*I33*b2*d3*q3^2*q4 + I22*I33*b3*d2*q3^2*q4 + 2*I11*I22*b1*d1*q2*q3*q4 - 2*I11*I22*b3*d1*q1*q2*q4 - 2*I11*I22*b3*d2*q1*q2*q3 + 2*I11*I22*b2*d2*q2*q3*q4 - 2*I11*I33*b1*d1*q2*q3*q4 + 2*I11*I33*b2*d1*q1*q3*q4 - 2*I11*I33*b2*d3*q1*q2*q3 - 2*I11*I33*b3*d3*q2*q3*q4 + 2*I22*I33*b1*d2*q1*q3*q4 - 2*I22*I33*b1*d3*q1*q2*q4 + 2*I22*I33*b2*d2*q2*q3*q4 - 2*I22*I33*b3*d3*q2*q3*q4 + 2*I11*I22*I33*q1^2*q2*q1_dot*q2_dot + 2*I11*I22*I33*q2*q3^2*q1_dot*q2_dot + 2*I11*I22*I33*q1^2*q3*q1_dot*q3_dot + 2*I11*I22*I33*q2*q4^2*q1_dot*q2_dot + 2*I11*I22*I33*q2^2*q3*q1_dot*q3_dot + 2*I11*I22*I33*q1^2*q4*q1_dot*q4_dot + 2*I11*I22*I33*q3*q4^2*q1_dot*q3_dot + 2*I11*I22*I33*q2^2*q4*q1_dot*q4_dot + 2*I11*I22*I33*q3^2*q4*q1_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(5, 3)
(2*I11*I22*b3*d1*q2^2 - I11*I33*b1*d3*q1^2 - I11*I33*b3*d1*q1^2 + I11*I33*b1*d3*q2^2 - I11*I33*b3*d1*q2^2 + 3*I11*I33*b1*d3*q3^2 + 3*I11*I33*b3*d1*q3^2 - I11*I33*b1*d3*q4^2 + I11*I33*b3*d1*q4^2 - 2*I22*I33*b1*d3*q4^2 + 2*I11*I22*b1*d1*q2*q4 + 2*I11*I22*b1*d2*q2*q3 - 2*I11*I22*b2*d1*q2*q3 - 2*I11*I22*b3*d2*q1*q2 + 2*I11*I22*b2*d2*q2*q4 + 4*I11*I33*b1*d1*q1*q3 - 2*I11*I33*b1*d1*q2*q4 + 2*I11*I33*b2*d1*q1*q4 + 4*I11*I33*b2*d1*q2*q3 - 2*I11*I33*b2*d3*q1*q2 - 4*I11*I33*b3*d3*q1*q3 + 4*I11*I33*b2*d3*q3*q4 - 2*I11*I33*b3*d3*q2*q4 + 2*I22*I33*b1*d2*q1*q4 + 2*I22*I33*b2*d2*q2*q4 + 2*I22*I33*b2*d3*q3*q4 + 2*I22*I33*b3*d2*q3*q4 - 2*I22*I33*b3*d3*q2*q4 - 4*I11*I22*I33*q1*q3*q2_dot^2 - 4*I11*I22*I33*q1*q3*q3_dot^2 - 4*I11*I22*I33*q1*q3*q4_dot^2 + 2*I11*I22*I33*q1^2*q1_dot*q3_dot + 2*I11*I22*I33*q2^2*q1_dot*q3_dot + 6*I11*I22*I33*q3^2*q1_dot*q3_dot + 2*I11*I22*I33*q4^2*q1_dot*q3_dot + 4*I11*I22*I33*q2*q3*q1_dot*q2_dot + 4*I11*I22*I33*q3*q4*q1_dot*q4_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) - (q3*(I11*I22*b1*d2*q2^3 + I11*I22*b2*d1*q2^3 + I11*I33*b1*d3*q3^3 + I11*I33*b3*d1*q3^3 - I22*I33*b2*d3*q4^3 + I22*I33*b3*d2*q4^3 - 2*I11*I22*I33*q1^3*q2_dot^2 - 2*I11*I22*I33*q1^3*q3_dot^2 - 2*I11*I22*I33*q1^3*q4_dot^2 - 2*I11*I22*I33*q1*q2^2*q2_dot^2 - 2*I11*I22*I33*q1*q2^2*q3_dot^2 - 2*I11*I22*I33*q1*q3^2*q2_dot^2 - 2*I11*I22*I33*q1*q2^2*q4_dot^2 - 2*I11*I22*I33*q1*q3^2*q3_dot^2 - 2*I11*I22*I33*q1*q4^2*q2_dot^2 - 2*I11*I22*I33*q1*q3^2*q4_dot^2 - 2*I11*I22*I33*q1*q4^2*q3_dot^2 - 2*I11*I22*I33*q1*q4^2*q4_dot^2 + 2*I11*I22*I33*q2^3*q1_dot*q2_dot + 2*I11*I22*I33*q3^3*q1_dot*q3_dot + 2*I11*I22*I33*q4^3*q1_dot*q4_dot + 2*I11*I22*b1*d1*q1*q2^2 - I11*I22*b1*d2*q1^2*q2 - I11*I22*b2*d1*q1^2*q2 - 2*I11*I22*b2*d2*q1*q2^2 + I11*I22*b1*d2*q2*q3^2 - I11*I22*b2*d1*q2*q3^2 - I11*I22*b1*d2*q2*q4^2 + I11*I22*b2*d1*q2*q4^2 + 2*I11*I22*b3*d1*q2^2*q3 - 2*I11*I22*b3*d2*q2^2*q4 + 2*I11*I33*b1*d1*q1*q3^2 - I11*I33*b1*d3*q1^2*q3 + 2*I11*I33*b2*d1*q2*q3^2 - I11*I33*b3*d1*q1^2*q3 + I11*I33*b1*d3*q2^2*q3 - I11*I33*b3*d1*q2^2*q3 - 2*I11*I33*b3*d3*q1*q3^2 - I11*I33*b1*d3*q3*q4^2 + I11*I33*b3*d1*q3*q4^2 + 2*I11*I33*b2*d3*q3^2*q4 - 2*I22*I33*b1*d2*q2*q4^2 + 2*I22*I33*b2*d2*q1*q4^2 + I22*I33*b2*d3*q1^2*q4 - I22*I33*b3*d2*q1^2*q4 - 2*I22*I33*b1*d3*q3*q4^2 - I22*I33*b2*d3*q2^2*q4 - I22*I33*b3*d2*q2^2*q4 + 2*I22*I33*b3*d3*q1*q4^2 + I22*I33*b2*d3*q3^2*q4 + I22*I33*b3*d2*q3^2*q4 + 2*I11*I22*b1*d1*q2*q3*q4 - 2*I11*I22*b3*d1*q1*q2*q4 - 2*I11*I22*b3*d2*q1*q2*q3 + 2*I11*I22*b2*d2*q2*q3*q4 - 2*I11*I33*b1*d1*q2*q3*q4 + 2*I11*I33*b2*d1*q1*q3*q4 - 2*I11*I33*b2*d3*q1*q2*q3 - 2*I11*I33*b3*d3*q2*q3*q4 + 2*I22*I33*b1*d2*q1*q3*q4 - 2*I22*I33*b1*d3*q1*q2*q4 + 2*I22*I33*b2*d2*q2*q3*q4 - 2*I22*I33*b3*d3*q2*q3*q4 + 2*I11*I22*I33*q1^2*q2*q1_dot*q2_dot + 2*I11*I22*I33*q2*q3^2*q1_dot*q2_dot + 2*I11*I22*I33*q1^2*q3*q1_dot*q3_dot + 2*I11*I22*I33*q2*q4^2*q1_dot*q2_dot + 2*I11*I22*I33*q2^2*q3*q1_dot*q3_dot + 2*I11*I22*I33*q1^2*q4*q1_dot*q4_dot + 2*I11*I22*I33*q3*q4^2*q1_dot*q3_dot + 2*I11*I22*I33*q2^2*q4*q1_dot*q4_dot + 2*I11*I22*I33*q3^2*q4*q1_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(5, 4)
(2*I11*I33*b2*d3*q3^2 - 2*I11*I22*b3*d2*q2^2 + I22*I33*b2*d3*q1^2 - I22*I33*b3*d2*q1^2 - I22*I33*b2*d3*q2^2 - I22*I33*b3*d2*q2^2 + I22*I33*b2*d3*q3^2 + I22*I33*b3*d2*q3^2 - 3*I22*I33*b2*d3*q4^2 + 3*I22*I33*b3*d2*q4^2 + 2*I11*I22*b1*d1*q2*q3 - 2*I11*I22*b3*d1*q1*q2 - 2*I11*I22*b1*d2*q2*q4 + 2*I11*I22*b2*d1*q2*q4 + 2*I11*I22*b2*d2*q2*q3 - 2*I11*I33*b1*d1*q2*q3 + 2*I11*I33*b2*d1*q1*q3 - 2*I11*I33*b1*d3*q3*q4 + 2*I11*I33*b3*d1*q3*q4 - 2*I11*I33*b3*d3*q2*q3 + 2*I22*I33*b1*d2*q1*q3 - 2*I22*I33*b1*d3*q1*q2 - 4*I22*I33*b1*d2*q2*q4 + 4*I22*I33*b2*d2*q1*q4 + 2*I22*I33*b2*d2*q2*q3 - 4*I22*I33*b1*d3*q3*q4 + 4*I22*I33*b3*d3*q1*q4 - 2*I22*I33*b3*d3*q2*q3 - 4*I11*I22*I33*q1*q4*q2_dot^2 - 4*I11*I22*I33*q1*q4*q3_dot^2 - 4*I11*I22*I33*q1*q4*q4_dot^2 + 2*I11*I22*I33*q1^2*q1_dot*q4_dot + 2*I11*I22*I33*q2^2*q1_dot*q4_dot + 2*I11*I22*I33*q3^2*q1_dot*q4_dot + 6*I11*I22*I33*q4^2*q1_dot*q4_dot + 4*I11*I22*I33*q2*q4*q1_dot*q2_dot + 4*I11*I22*I33*q3*q4*q1_dot*q3_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) - (q4*(I11*I22*b1*d2*q2^3 + I11*I22*b2*d1*q2^3 + I11*I33*b1*d3*q3^3 + I11*I33*b3*d1*q3^3 - I22*I33*b2*d3*q4^3 + I22*I33*b3*d2*q4^3 - 2*I11*I22*I33*q1^3*q2_dot^2 - 2*I11*I22*I33*q1^3*q3_dot^2 - 2*I11*I22*I33*q1^3*q4_dot^2 - 2*I11*I22*I33*q1*q2^2*q2_dot^2 - 2*I11*I22*I33*q1*q2^2*q3_dot^2 - 2*I11*I22*I33*q1*q3^2*q2_dot^2 - 2*I11*I22*I33*q1*q2^2*q4_dot^2 - 2*I11*I22*I33*q1*q3^2*q3_dot^2 - 2*I11*I22*I33*q1*q4^2*q2_dot^2 - 2*I11*I22*I33*q1*q3^2*q4_dot^2 - 2*I11*I22*I33*q1*q4^2*q3_dot^2 - 2*I11*I22*I33*q1*q4^2*q4_dot^2 + 2*I11*I22*I33*q2^3*q1_dot*q2_dot + 2*I11*I22*I33*q3^3*q1_dot*q3_dot + 2*I11*I22*I33*q4^3*q1_dot*q4_dot + 2*I11*I22*b1*d1*q1*q2^2 - I11*I22*b1*d2*q1^2*q2 - I11*I22*b2*d1*q1^2*q2 - 2*I11*I22*b2*d2*q1*q2^2 + I11*I22*b1*d2*q2*q3^2 - I11*I22*b2*d1*q2*q3^2 - I11*I22*b1*d2*q2*q4^2 + I11*I22*b2*d1*q2*q4^2 + 2*I11*I22*b3*d1*q2^2*q3 - 2*I11*I22*b3*d2*q2^2*q4 + 2*I11*I33*b1*d1*q1*q3^2 - I11*I33*b1*d3*q1^2*q3 + 2*I11*I33*b2*d1*q2*q3^2 - I11*I33*b3*d1*q1^2*q3 + I11*I33*b1*d3*q2^2*q3 - I11*I33*b3*d1*q2^2*q3 - 2*I11*I33*b3*d3*q1*q3^2 - I11*I33*b1*d3*q3*q4^2 + I11*I33*b3*d1*q3*q4^2 + 2*I11*I33*b2*d3*q3^2*q4 - 2*I22*I33*b1*d2*q2*q4^2 + 2*I22*I33*b2*d2*q1*q4^2 + I22*I33*b2*d3*q1^2*q4 - I22*I33*b3*d2*q1^2*q4 - 2*I22*I33*b1*d3*q3*q4^2 - I22*I33*b2*d3*q2^2*q4 - I22*I33*b3*d2*q2^2*q4 + 2*I22*I33*b3*d3*q1*q4^2 + I22*I33*b2*d3*q3^2*q4 + I22*I33*b3*d2*q3^2*q4 + 2*I11*I22*b1*d1*q2*q3*q4 - 2*I11*I22*b3*d1*q1*q2*q4 - 2*I11*I22*b3*d2*q1*q2*q3 + 2*I11*I22*b2*d2*q2*q3*q4 - 2*I11*I33*b1*d1*q2*q3*q4 + 2*I11*I33*b2*d1*q1*q3*q4 - 2*I11*I33*b2*d3*q1*q2*q3 - 2*I11*I33*b3*d3*q2*q3*q4 + 2*I22*I33*b1*d2*q1*q3*q4 - 2*I22*I33*b1*d3*q1*q2*q4 + 2*I22*I33*b2*d2*q2*q3*q4 - 2*I22*I33*b3*d3*q2*q3*q4 + 2*I11*I22*I33*q1^2*q2*q1_dot*q2_dot + 2*I11*I22*I33*q2*q3^2*q1_dot*q2_dot + 2*I11*I22*I33*q1^2*q3*q1_dot*q3_dot + 2*I11*I22*I33*q2*q4^2*q1_dot*q2_dot + 2*I11*I22*I33*q2^2*q3*q1_dot*q3_dot + 2*I11*I22*I33*q1^2*q4*q1_dot*q4_dot + 2*I11*I22*I33*q3*q4^2*q1_dot*q3_dot + 2*I11*I22*I33*q2^2*q4*q1_dot*q4_dot + 2*I11*I22*I33*q3^2*q4*q1_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(5, 5)
q2*q2_dot + q3*q3_dot + q4*q4_dot




F(5, 6)
q2*q1_dot - 2*q1*q2_dot




F(5, 7)
q3*q1_dot - 2*q1*q3_dot




F(5, 8)
q4*q1_dot - 2*q1*q4_dot




F(6, 1)
(3*I11*I22*b1*d2*q1^2 + 3*I11*I22*b2*d1*q1^2 - I11*I22*b1*d2*q2^2 - I11*I22*b2*d1*q2^2 - I11*I22*b1*d2*q3^2 + I11*I22*b2*d1*q3^2 + I11*I22*b1*d2*q4^2 - I11*I22*b2*d1*q4^2 - 2*I11*I33*b2*d1*q4^2 + 2*I22*I33*b1*d2*q3^2 - 4*I11*I22*b1*d1*q1*q2 + 4*I11*I22*b2*d2*q1*q2 - 2*I11*I22*b1*d1*q3*q4 + 4*I11*I22*b3*d1*q1*q4 - 2*I11*I22*b3*d1*q2*q3 + 4*I11*I22*b3*d2*q1*q3 - 2*I11*I22*b2*d2*q3*q4 + 2*I11*I22*b3*d2*q2*q4 - 2*I11*I33*b1*d1*q3*q4 + 2*I11*I33*b1*d3*q1*q4 + 2*I11*I33*b3*d1*q1*q4 + 2*I11*I33*b2*d3*q2*q4 + 2*I11*I33*b3*d3*q3*q4 - 2*I22*I33*b1*d3*q2*q3 + 2*I22*I33*b2*d3*q1*q3 - 2*I22*I33*b3*d2*q1*q3 + 2*I22*I33*b2*d2*q3*q4 + 2*I22*I33*b3*d3*q3*q4 - 4*I11*I22*I33*q1*q2*q1_dot^2 - 4*I11*I22*I33*q1*q2*q3_dot^2 - 4*I11*I22*I33*q1*q2*q4_dot^2 + 6*I11*I22*I33*q1^2*q1_dot*q2_dot + 2*I11*I22*I33*q2^2*q1_dot*q2_dot + 2*I11*I22*I33*q3^2*q1_dot*q2_dot + 2*I11*I22*I33*q4^2*q1_dot*q2_dot + 4*I11*I22*I33*q1*q3*q2_dot*q3_dot + 4*I11*I22*I33*q1*q4*q2_dot*q4_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) - (q1*(I11*I22*b1*d2*q1^3 + I11*I22*b2*d1*q1^3 + I11*I33*b1*d3*q4^3 - I11*I33*b3*d1*q4^3 + I22*I33*b2*d3*q3^3 + I22*I33*b3*d2*q3^3 - 2*I11*I22*I33*q2^3*q1_dot^2 - 2*I11*I22*I33*q2^3*q3_dot^2 - 2*I11*I22*I33*q2^3*q4_dot^2 - 2*I11*I22*I33*q1^2*q2*q1_dot^2 - 2*I11*I22*I33*q2*q3^2*q1_dot^2 - 2*I11*I22*I33*q1^2*q2*q3_dot^2 - 2*I11*I22*I33*q2*q4^2*q1_dot^2 - 2*I11*I22*I33*q1^2*q2*q4_dot^2 - 2*I11*I22*I33*q2*q3^2*q3_dot^2 - 2*I11*I22*I33*q2*q3^2*q4_dot^2 - 2*I11*I22*I33*q2*q4^2*q3_dot^2 - 2*I11*I22*I33*q2*q4^2*q4_dot^2 + 2*I11*I22*I33*q1^3*q1_dot*q2_dot + 2*I11*I22*I33*q3^3*q2_dot*q3_dot + 2*I11*I22*I33*q4^3*q2_dot*q4_dot - 2*I11*I22*b1*d1*q1^2*q2 - I11*I22*b1*d2*q1*q2^2 - I11*I22*b2*d1*q1*q2^2 - I11*I22*b1*d2*q1*q3^2 + I11*I22*b2*d1*q1*q3^2 + 2*I11*I22*b2*d2*q1^2*q2 + I11*I22*b1*d2*q1*q4^2 - I11*I22*b2*d1*q1*q4^2 + 2*I11*I22*b3*d1*q1^2*q4 + 2*I11*I22*b3*d2*q1^2*q3 + 2*I11*I33*b1*d1*q2*q4^2 - 2*I11*I33*b2*d1*q1*q4^2 + I11*I33*b1*d3*q1^2*q4 + I11*I33*b3*d1*q1^2*q4 - I11*I33*b1*d3*q2^2*q4 + I11*I33*b3*d1*q2^2*q4 - I11*I33*b1*d3*q3^2*q4 - I11*I33*b3*d1*q3^2*q4 - 2*I11*I33*b2*d3*q3*q4^2 + 2*I11*I33*b3*d3*q2*q4^2 + 2*I22*I33*b1*d2*q1*q3^2 + 2*I22*I33*b2*d2*q2*q3^2 + I22*I33*b2*d3*q1^2*q3 - I22*I33*b3*d2*q1^2*q3 - I22*I33*b2*d3*q2^2*q3 - I22*I33*b3*d2*q2^2*q3 - 2*I22*I33*b1*d3*q3^2*q4 - 2*I22*I33*b3*d3*q2*q3^2 - I22*I33*b2*d3*q3*q4^2 + I22*I33*b3*d2*q3*q4^2 - 2*I11*I22*b1*d1*q1*q3*q4 - 2*I11*I22*b3*d1*q1*q2*q3 - 2*I11*I22*b2*d2*q1*q3*q4 + 2*I11*I22*b3*d2*q1*q2*q4 - 2*I11*I33*b1*d1*q1*q3*q4 - 2*I11*I33*b2*d1*q2*q3*q4 + 2*I11*I33*b2*d3*q1*q2*q4 + 2*I11*I33*b3*d3*q1*q3*q4 - 2*I22*I33*b1*d3*q1*q2*q3 - 2*I22*I33*b1*d2*q2*q3*q4 + 2*I22*I33*b2*d2*q1*q3*q4 + 2*I22*I33*b3*d3*q1*q3*q4 + 2*I11*I22*I33*q1*q2^2*q1_dot*q2_dot + 2*I11*I22*I33*q1*q3^2*q1_dot*q2_dot + 2*I11*I22*I33*q1*q4^2*q1_dot*q2_dot + 2*I11*I22*I33*q1^2*q3*q2_dot*q3_dot + 2*I11*I22*I33*q2^2*q3*q2_dot*q3_dot + 2*I11*I22*I33*q1^2*q4*q2_dot*q4_dot + 2*I11*I22*I33*q3*q4^2*q2_dot*q3_dot + 2*I11*I22*I33*q2^2*q4*q2_dot*q4_dot + 2*I11*I22*I33*q3^2*q4*q2_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(6, 2)
- (I11*I22*b1*d1*q1^2 - I11*I22*b2*d2*q1^2 - I11*I33*b1*d1*q4^2 - I11*I33*b3*d3*q4^2 - I22*I33*b2*d2*q3^2 + I22*I33*b3*d3*q3^2 + I11*I22*I33*q1^2*q1_dot^2 + 3*I11*I22*I33*q2^2*q1_dot^2 + I11*I22*I33*q1^2*q3_dot^2 + I11*I22*I33*q3^2*q1_dot^2 + I11*I22*I33*q1^2*q4_dot^2 + 3*I11*I22*I33*q2^2*q3_dot^2 + I11*I22*I33*q4^2*q1_dot^2 + 3*I11*I22*I33*q2^2*q4_dot^2 + I11*I22*I33*q3^2*q3_dot^2 + I11*I22*I33*q3^2*q4_dot^2 + I11*I22*I33*q4^2*q3_dot^2 + I11*I22*I33*q4^2*q4_dot^2 + I11*I22*b1*d2*q1*q2 + I11*I22*b2*d1*q1*q2 + I11*I22*b3*d1*q1*q3 - I11*I22*b3*d2*q1*q4 + I11*I33*b1*d3*q2*q4 + I11*I33*b2*d1*q3*q4 - I11*I33*b2*d3*q1*q4 - I11*I33*b3*d1*q2*q4 + I22*I33*b1*d3*q1*q3 + I22*I33*b1*d2*q3*q4 + I22*I33*b2*d3*q2*q3 + I22*I33*b3*d2*q2*q3 - 2*I11*I22*I33*q1*q2*q1_dot*q2_dot - 2*I11*I22*I33*q2*q3*q2_dot*q3_dot - 2*I11*I22*I33*q2*q4*q2_dot*q4_dot)/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) - (q2*(I11*I22*b1*d2*q1^3 + I11*I22*b2*d1*q1^3 + I11*I33*b1*d3*q4^3 - I11*I33*b3*d1*q4^3 + I22*I33*b2*d3*q3^3 + I22*I33*b3*d2*q3^3 - 2*I11*I22*I33*q2^3*q1_dot^2 - 2*I11*I22*I33*q2^3*q3_dot^2 - 2*I11*I22*I33*q2^3*q4_dot^2 - 2*I11*I22*I33*q1^2*q2*q1_dot^2 - 2*I11*I22*I33*q2*q3^2*q1_dot^2 - 2*I11*I22*I33*q1^2*q2*q3_dot^2 - 2*I11*I22*I33*q2*q4^2*q1_dot^2 - 2*I11*I22*I33*q1^2*q2*q4_dot^2 - 2*I11*I22*I33*q2*q3^2*q3_dot^2 - 2*I11*I22*I33*q2*q3^2*q4_dot^2 - 2*I11*I22*I33*q2*q4^2*q3_dot^2 - 2*I11*I22*I33*q2*q4^2*q4_dot^2 + 2*I11*I22*I33*q1^3*q1_dot*q2_dot + 2*I11*I22*I33*q3^3*q2_dot*q3_dot + 2*I11*I22*I33*q4^3*q2_dot*q4_dot - 2*I11*I22*b1*d1*q1^2*q2 - I11*I22*b1*d2*q1*q2^2 - I11*I22*b2*d1*q1*q2^2 - I11*I22*b1*d2*q1*q3^2 + I11*I22*b2*d1*q1*q3^2 + 2*I11*I22*b2*d2*q1^2*q2 + I11*I22*b1*d2*q1*q4^2 - I11*I22*b2*d1*q1*q4^2 + 2*I11*I22*b3*d1*q1^2*q4 + 2*I11*I22*b3*d2*q1^2*q3 + 2*I11*I33*b1*d1*q2*q4^2 - 2*I11*I33*b2*d1*q1*q4^2 + I11*I33*b1*d3*q1^2*q4 + I11*I33*b3*d1*q1^2*q4 - I11*I33*b1*d3*q2^2*q4 + I11*I33*b3*d1*q2^2*q4 - I11*I33*b1*d3*q3^2*q4 - I11*I33*b3*d1*q3^2*q4 - 2*I11*I33*b2*d3*q3*q4^2 + 2*I11*I33*b3*d3*q2*q4^2 + 2*I22*I33*b1*d2*q1*q3^2 + 2*I22*I33*b2*d2*q2*q3^2 + I22*I33*b2*d3*q1^2*q3 - I22*I33*b3*d2*q1^2*q3 - I22*I33*b2*d3*q2^2*q3 - I22*I33*b3*d2*q2^2*q3 - 2*I22*I33*b1*d3*q3^2*q4 - 2*I22*I33*b3*d3*q2*q3^2 - I22*I33*b2*d3*q3*q4^2 + I22*I33*b3*d2*q3*q4^2 - 2*I11*I22*b1*d1*q1*q3*q4 - 2*I11*I22*b3*d1*q1*q2*q3 - 2*I11*I22*b2*d2*q1*q3*q4 + 2*I11*I22*b3*d2*q1*q2*q4 - 2*I11*I33*b1*d1*q1*q3*q4 - 2*I11*I33*b2*d1*q2*q3*q4 + 2*I11*I33*b2*d3*q1*q2*q4 + 2*I11*I33*b3*d3*q1*q3*q4 - 2*I22*I33*b1*d3*q1*q2*q3 - 2*I22*I33*b1*d2*q2*q3*q4 + 2*I22*I33*b2*d2*q1*q3*q4 + 2*I22*I33*b3*d3*q1*q3*q4 + 2*I11*I22*I33*q1*q2^2*q1_dot*q2_dot + 2*I11*I22*I33*q1*q3^2*q1_dot*q2_dot + 2*I11*I22*I33*q1*q4^2*q1_dot*q2_dot + 2*I11*I22*I33*q1^2*q3*q2_dot*q3_dot + 2*I11*I22*I33*q2^2*q3*q2_dot*q3_dot + 2*I11*I22*I33*q1^2*q4*q2_dot*q4_dot + 2*I11*I22*I33*q3*q4^2*q2_dot*q3_dot + 2*I11*I22*I33*q2^2*q4*q2_dot*q4_dot + 2*I11*I22*I33*q3^2*q4*q2_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(6, 3)
- (2*I11*I33*b2*d3*q4^2 - 2*I11*I22*b3*d2*q1^2 - I22*I33*b2*d3*q1^2 + I22*I33*b3*d2*q1^2 + I22*I33*b2*d3*q2^2 + I22*I33*b3*d2*q2^2 - 3*I22*I33*b2*d3*q3^2 - 3*I22*I33*b3*d2*q3^2 + I22*I33*b2*d3*q4^2 - I22*I33*b3*d2*q4^2 + 2*I11*I22*b1*d1*q1*q4 + 2*I11*I22*b1*d2*q1*q3 - 2*I11*I22*b2*d1*q1*q3 + 2*I11*I22*b3*d1*q1*q2 + 2*I11*I22*b2*d2*q1*q4 + 2*I11*I33*b1*d1*q1*q4 + 2*I11*I33*b2*d1*q2*q4 + 2*I11*I33*b1*d3*q3*q4 + 2*I11*I33*b3*d1*q3*q4 - 2*I11*I33*b3*d3*q1*q4 - 4*I22*I33*b1*d2*q1*q3 + 2*I22*I33*b1*d3*q1*q2 + 2*I22*I33*b1*d2*q2*q4 - 2*I22*I33*b2*d2*q1*q4 - 4*I22*I33*b2*d2*q2*q3 + 4*I22*I33*b1*d3*q3*q4 - 2*I22*I33*b3*d3*q1*q4 + 4*I22*I33*b3*d3*q2*q3 + 4*I11*I22*I33*q2*q3*q1_dot^2 + 4*I11*I22*I33*q2*q3*q3_dot^2 + 4*I11*I22*I33*q2*q3*q4_dot^2 - 2*I11*I22*I33*q1^2*q2_dot*q3_dot - 2*I11*I22*I33*q2^2*q2_dot*q3_dot - 6*I11*I22*I33*q3^2*q2_dot*q3_dot - 2*I11*I22*I33*q4^2*q2_dot*q3_dot - 4*I11*I22*I33*q1*q3*q1_dot*q2_dot - 4*I11*I22*I33*q3*q4*q2_dot*q4_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) - (q3*(I11*I22*b1*d2*q1^3 + I11*I22*b2*d1*q1^3 + I11*I33*b1*d3*q4^3 - I11*I33*b3*d1*q4^3 + I22*I33*b2*d3*q3^3 + I22*I33*b3*d2*q3^3 - 2*I11*I22*I33*q2^3*q1_dot^2 - 2*I11*I22*I33*q2^3*q3_dot^2 - 2*I11*I22*I33*q2^3*q4_dot^2 - 2*I11*I22*I33*q1^2*q2*q1_dot^2 - 2*I11*I22*I33*q2*q3^2*q1_dot^2 - 2*I11*I22*I33*q1^2*q2*q3_dot^2 - 2*I11*I22*I33*q2*q4^2*q1_dot^2 - 2*I11*I22*I33*q1^2*q2*q4_dot^2 - 2*I11*I22*I33*q2*q3^2*q3_dot^2 - 2*I11*I22*I33*q2*q3^2*q4_dot^2 - 2*I11*I22*I33*q2*q4^2*q3_dot^2 - 2*I11*I22*I33*q2*q4^2*q4_dot^2 + 2*I11*I22*I33*q1^3*q1_dot*q2_dot + 2*I11*I22*I33*q3^3*q2_dot*q3_dot + 2*I11*I22*I33*q4^3*q2_dot*q4_dot - 2*I11*I22*b1*d1*q1^2*q2 - I11*I22*b1*d2*q1*q2^2 - I11*I22*b2*d1*q1*q2^2 - I11*I22*b1*d2*q1*q3^2 + I11*I22*b2*d1*q1*q3^2 + 2*I11*I22*b2*d2*q1^2*q2 + I11*I22*b1*d2*q1*q4^2 - I11*I22*b2*d1*q1*q4^2 + 2*I11*I22*b3*d1*q1^2*q4 + 2*I11*I22*b3*d2*q1^2*q3 + 2*I11*I33*b1*d1*q2*q4^2 - 2*I11*I33*b2*d1*q1*q4^2 + I11*I33*b1*d3*q1^2*q4 + I11*I33*b3*d1*q1^2*q4 - I11*I33*b1*d3*q2^2*q4 + I11*I33*b3*d1*q2^2*q4 - I11*I33*b1*d3*q3^2*q4 - I11*I33*b3*d1*q3^2*q4 - 2*I11*I33*b2*d3*q3*q4^2 + 2*I11*I33*b3*d3*q2*q4^2 + 2*I22*I33*b1*d2*q1*q3^2 + 2*I22*I33*b2*d2*q2*q3^2 + I22*I33*b2*d3*q1^2*q3 - I22*I33*b3*d2*q1^2*q3 - I22*I33*b2*d3*q2^2*q3 - I22*I33*b3*d2*q2^2*q3 - 2*I22*I33*b1*d3*q3^2*q4 - 2*I22*I33*b3*d3*q2*q3^2 - I22*I33*b2*d3*q3*q4^2 + I22*I33*b3*d2*q3*q4^2 - 2*I11*I22*b1*d1*q1*q3*q4 - 2*I11*I22*b3*d1*q1*q2*q3 - 2*I11*I22*b2*d2*q1*q3*q4 + 2*I11*I22*b3*d2*q1*q2*q4 - 2*I11*I33*b1*d1*q1*q3*q4 - 2*I11*I33*b2*d1*q2*q3*q4 + 2*I11*I33*b2*d3*q1*q2*q4 + 2*I11*I33*b3*d3*q1*q3*q4 - 2*I22*I33*b1*d3*q1*q2*q3 - 2*I22*I33*b1*d2*q2*q3*q4 + 2*I22*I33*b2*d2*q1*q3*q4 + 2*I22*I33*b3*d3*q1*q3*q4 + 2*I11*I22*I33*q1*q2^2*q1_dot*q2_dot + 2*I11*I22*I33*q1*q3^2*q1_dot*q2_dot + 2*I11*I22*I33*q1*q4^2*q1_dot*q2_dot + 2*I11*I22*I33*q1^2*q3*q2_dot*q3_dot + 2*I11*I22*I33*q2^2*q3*q2_dot*q3_dot + 2*I11*I22*I33*q1^2*q4*q2_dot*q4_dot + 2*I11*I22*I33*q3*q4^2*q2_dot*q3_dot + 2*I11*I22*I33*q2^2*q4*q2_dot*q4_dot + 2*I11*I22*I33*q3^2*q4*q2_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(6, 4)
(2*I11*I22*b3*d1*q1^2 + I11*I33*b1*d3*q1^2 + I11*I33*b3*d1*q1^2 - I11*I33*b1*d3*q2^2 + I11*I33*b3*d1*q2^2 - I11*I33*b1*d3*q3^2 - I11*I33*b3*d1*q3^2 + 3*I11*I33*b1*d3*q4^2 - 3*I11*I33*b3*d1*q4^2 - 2*I22*I33*b1*d3*q3^2 - 2*I11*I22*b1*d1*q1*q3 + 2*I11*I22*b1*d2*q1*q4 - 2*I11*I22*b2*d1*q1*q4 - 2*I11*I22*b2*d2*q1*q3 + 2*I11*I22*b3*d2*q1*q2 - 2*I11*I33*b1*d1*q1*q3 + 4*I11*I33*b1*d1*q2*q4 - 4*I11*I33*b2*d1*q1*q4 - 2*I11*I33*b2*d1*q2*q3 + 2*I11*I33*b2*d3*q1*q2 + 2*I11*I33*b3*d3*q1*q3 - 4*I11*I33*b2*d3*q3*q4 + 4*I11*I33*b3*d3*q2*q4 - 2*I22*I33*b1*d2*q2*q3 + 2*I22*I33*b2*d2*q1*q3 + 2*I22*I33*b3*d3*q1*q3 - 2*I22*I33*b2*d3*q3*q4 + 2*I22*I33*b3*d2*q3*q4 - 4*I11*I22*I33*q2*q4*q1_dot^2 - 4*I11*I22*I33*q2*q4*q3_dot^2 - 4*I11*I22*I33*q2*q4*q4_dot^2 + 2*I11*I22*I33*q1^2*q2_dot*q4_dot + 2*I11*I22*I33*q2^2*q2_dot*q4_dot + 2*I11*I22*I33*q3^2*q2_dot*q4_dot + 6*I11*I22*I33*q4^2*q2_dot*q4_dot + 4*I11*I22*I33*q1*q4*q1_dot*q2_dot + 4*I11*I22*I33*q3*q4*q2_dot*q3_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) - (q4*(I11*I22*b1*d2*q1^3 + I11*I22*b2*d1*q1^3 + I11*I33*b1*d3*q4^3 - I11*I33*b3*d1*q4^3 + I22*I33*b2*d3*q3^3 + I22*I33*b3*d2*q3^3 - 2*I11*I22*I33*q2^3*q1_dot^2 - 2*I11*I22*I33*q2^3*q3_dot^2 - 2*I11*I22*I33*q2^3*q4_dot^2 - 2*I11*I22*I33*q1^2*q2*q1_dot^2 - 2*I11*I22*I33*q2*q3^2*q1_dot^2 - 2*I11*I22*I33*q1^2*q2*q3_dot^2 - 2*I11*I22*I33*q2*q4^2*q1_dot^2 - 2*I11*I22*I33*q1^2*q2*q4_dot^2 - 2*I11*I22*I33*q2*q3^2*q3_dot^2 - 2*I11*I22*I33*q2*q3^2*q4_dot^2 - 2*I11*I22*I33*q2*q4^2*q3_dot^2 - 2*I11*I22*I33*q2*q4^2*q4_dot^2 + 2*I11*I22*I33*q1^3*q1_dot*q2_dot + 2*I11*I22*I33*q3^3*q2_dot*q3_dot + 2*I11*I22*I33*q4^3*q2_dot*q4_dot - 2*I11*I22*b1*d1*q1^2*q2 - I11*I22*b1*d2*q1*q2^2 - I11*I22*b2*d1*q1*q2^2 - I11*I22*b1*d2*q1*q3^2 + I11*I22*b2*d1*q1*q3^2 + 2*I11*I22*b2*d2*q1^2*q2 + I11*I22*b1*d2*q1*q4^2 - I11*I22*b2*d1*q1*q4^2 + 2*I11*I22*b3*d1*q1^2*q4 + 2*I11*I22*b3*d2*q1^2*q3 + 2*I11*I33*b1*d1*q2*q4^2 - 2*I11*I33*b2*d1*q1*q4^2 + I11*I33*b1*d3*q1^2*q4 + I11*I33*b3*d1*q1^2*q4 - I11*I33*b1*d3*q2^2*q4 + I11*I33*b3*d1*q2^2*q4 - I11*I33*b1*d3*q3^2*q4 - I11*I33*b3*d1*q3^2*q4 - 2*I11*I33*b2*d3*q3*q4^2 + 2*I11*I33*b3*d3*q2*q4^2 + 2*I22*I33*b1*d2*q1*q3^2 + 2*I22*I33*b2*d2*q2*q3^2 + I22*I33*b2*d3*q1^2*q3 - I22*I33*b3*d2*q1^2*q3 - I22*I33*b2*d3*q2^2*q3 - I22*I33*b3*d2*q2^2*q3 - 2*I22*I33*b1*d3*q3^2*q4 - 2*I22*I33*b3*d3*q2*q3^2 - I22*I33*b2*d3*q3*q4^2 + I22*I33*b3*d2*q3*q4^2 - 2*I11*I22*b1*d1*q1*q3*q4 - 2*I11*I22*b3*d1*q1*q2*q3 - 2*I11*I22*b2*d2*q1*q3*q4 + 2*I11*I22*b3*d2*q1*q2*q4 - 2*I11*I33*b1*d1*q1*q3*q4 - 2*I11*I33*b2*d1*q2*q3*q4 + 2*I11*I33*b2*d3*q1*q2*q4 + 2*I11*I33*b3*d3*q1*q3*q4 - 2*I22*I33*b1*d3*q1*q2*q3 - 2*I22*I33*b1*d2*q2*q3*q4 + 2*I22*I33*b2*d2*q1*q3*q4 + 2*I22*I33*b3*d3*q1*q3*q4 + 2*I11*I22*I33*q1*q2^2*q1_dot*q2_dot + 2*I11*I22*I33*q1*q3^2*q1_dot*q2_dot + 2*I11*I22*I33*q1*q4^2*q1_dot*q2_dot + 2*I11*I22*I33*q1^2*q3*q2_dot*q3_dot + 2*I11*I22*I33*q2^2*q3*q2_dot*q3_dot + 2*I11*I22*I33*q1^2*q4*q2_dot*q4_dot + 2*I11*I22*I33*q3*q4^2*q2_dot*q3_dot + 2*I11*I22*I33*q2^2*q4*q2_dot*q4_dot + 2*I11*I22*I33*q3^2*q4*q2_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(6, 5)
q1*q2_dot - 2*q2*q1_dot




F(6, 6)
q1*q1_dot + q3*q3_dot + q4*q4_dot




F(6, 7)
q3*q2_dot - 2*q2*q3_dot




F(6, 8)
q4*q2_dot - 2*q2*q4_dot




F(7, 1)
(q1*(I11*I22*b1*d2*q4^3 - I11*I22*b2*d1*q4^3 - I11*I33*b1*d3*q1^3 - I11*I33*b3*d1*q1^3 - I22*I33*b2*d3*q2^3 - I22*I33*b3*d2*q2^3 + 2*I11*I22*I33*q3^3*q1_dot^2 + 2*I11*I22*I33*q3^3*q2_dot^2 + 2*I11*I22*I33*q3^3*q4_dot^2 + 2*I11*I22*I33*q1^2*q3*q1_dot^2 + 2*I11*I22*I33*q1^2*q3*q2_dot^2 + 2*I11*I22*I33*q2^2*q3*q1_dot^2 + 2*I11*I22*I33*q2^2*q3*q2_dot^2 + 2*I11*I22*I33*q3*q4^2*q1_dot^2 + 2*I11*I22*I33*q1^2*q3*q4_dot^2 + 2*I11*I22*I33*q3*q4^2*q2_dot^2 + 2*I11*I22*I33*q2^2*q3*q4_dot^2 + 2*I11*I22*I33*q3*q4^2*q4_dot^2 - 2*I11*I22*I33*q1^3*q1_dot*q3_dot - 2*I11*I22*I33*q2^3*q2_dot*q3_dot - 2*I11*I22*I33*q4^3*q3_dot*q4_dot + I11*I22*b1*d2*q1^2*q4 + I11*I22*b2*d1*q1^2*q4 - 2*I11*I22*b1*d1*q3*q4^2 - I11*I22*b1*d2*q2^2*q4 - I11*I22*b2*d1*q2^2*q4 + 2*I11*I22*b3*d1*q1*q4^2 - I11*I22*b1*d2*q3^2*q4 + I11*I22*b2*d1*q3^2*q4 - 2*I11*I22*b2*d2*q3*q4^2 + 2*I11*I22*b3*d2*q2*q4^2 + 2*I11*I33*b1*d1*q1^2*q3 + I11*I33*b1*d3*q1*q2^2 - I11*I33*b3*d1*q1*q2^2 + I11*I33*b1*d3*q1*q3^2 + 2*I11*I33*b2*d1*q1^2*q4 - 2*I11*I33*b2*d3*q1^2*q2 + I11*I33*b3*d1*q1*q3^2 - I11*I33*b1*d3*q1*q4^2 + I11*I33*b3*d1*q1*q4^2 - 2*I11*I33*b3*d3*q1^2*q3 - 2*I22*I33*b1*d3*q1*q2^2 + I22*I33*b2*d3*q1^2*q2 - I22*I33*b3*d2*q1^2*q2 - 2*I22*I33*b1*d2*q2^2*q4 + 2*I22*I33*b2*d2*q2^2*q3 + I22*I33*b2*d3*q2*q3^2 + I22*I33*b3*d2*q2*q3^2 - I22*I33*b2*d3*q2*q4^2 + I22*I33*b3*d2*q2*q4^2 - 2*I22*I33*b3*d3*q2^2*q3 - 2*I11*I22*b1*d1*q1*q2*q4 + 2*I11*I22*b2*d2*q1*q2*q4 - 2*I11*I22*b3*d1*q2*q3*q4 + 2*I11*I22*b3*d2*q1*q3*q4 - 2*I11*I33*b1*d1*q1*q2*q4 + 2*I11*I33*b2*d1*q1*q2*q3 + 2*I11*I33*b2*d3*q1*q3*q4 - 2*I11*I33*b3*d3*q1*q2*q4 + 2*I22*I33*b1*d2*q1*q2*q3 + 2*I22*I33*b2*d2*q1*q2*q4 - 2*I22*I33*b1*d3*q2*q3*q4 + 2*I22*I33*b3*d3*q1*q2*q4 - 2*I11*I22*I33*q1*q2^2*q1_dot*q3_dot - 2*I11*I22*I33*q1*q3^2*q1_dot*q3_dot - 2*I11*I22*I33*q1^2*q2*q2_dot*q3_dot - 2*I11*I22*I33*q1*q4^2*q1_dot*q3_dot - 2*I11*I22*I33*q2*q3^2*q2_dot*q3_dot - 2*I11*I22*I33*q2*q4^2*q2_dot*q3_dot - 2*I11*I22*I33*q1^2*q4*q3_dot*q4_dot - 2*I11*I22*I33*q2^2*q4*q3_dot*q4_dot - 2*I11*I22*I33*q3^2*q4*q3_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2) - (2*I11*I22*b3*d1*q4^2 - 3*I11*I33*b1*d3*q1^2 - 3*I11*I33*b3*d1*q1^2 + I11*I33*b1*d3*q2^2 - I11*I33*b3*d1*q2^2 + I11*I33*b1*d3*q3^2 + I11*I33*b3*d1*q3^2 - I11*I33*b1*d3*q4^2 + I11*I33*b3*d1*q4^2 - 2*I22*I33*b1*d3*q2^2 - 2*I11*I22*b1*d1*q2*q4 + 2*I11*I22*b1*d2*q1*q4 + 2*I11*I22*b2*d1*q1*q4 + 2*I11*I22*b2*d2*q2*q4 + 2*I11*I22*b3*d2*q3*q4 + 4*I11*I33*b1*d1*q1*q3 - 2*I11*I33*b1*d1*q2*q4 + 4*I11*I33*b2*d1*q1*q4 + 2*I11*I33*b2*d1*q2*q3 - 4*I11*I33*b2*d3*q1*q2 - 4*I11*I33*b3*d3*q1*q3 + 2*I11*I33*b2*d3*q3*q4 - 2*I11*I33*b3*d3*q2*q4 + 2*I22*I33*b1*d2*q2*q3 + 2*I22*I33*b2*d3*q1*q2 - 2*I22*I33*b3*d2*q1*q2 + 2*I22*I33*b2*d2*q2*q4 + 2*I22*I33*b3*d3*q2*q4 + 4*I11*I22*I33*q1*q3*q1_dot^2 + 4*I11*I22*I33*q1*q3*q2_dot^2 + 4*I11*I22*I33*q1*q3*q4_dot^2 - 6*I11*I22*I33*q1^2*q1_dot*q3_dot - 2*I11*I22*I33*q2^2*q1_dot*q3_dot - 2*I11*I22*I33*q3^2*q1_dot*q3_dot - 2*I11*I22*I33*q4^2*q1_dot*q3_dot - 4*I11*I22*I33*q1*q2*q2_dot*q3_dot - 4*I11*I22*I33*q1*q4*q3_dot*q4_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2))




F(7, 2)
(2*I11*I33*b2*d3*q1^2 - 2*I11*I22*b3*d2*q4^2 - I22*I33*b2*d3*q1^2 + I22*I33*b3*d2*q1^2 + 3*I22*I33*b2*d3*q2^2 + 3*I22*I33*b3*d2*q2^2 - I22*I33*b2*d3*q3^2 - I22*I33*b3*d2*q3^2 + I22*I33*b2*d3*q4^2 - I22*I33*b3*d2*q4^2 + 2*I11*I22*b1*d1*q1*q4 + 2*I11*I22*b1*d2*q2*q4 + 2*I11*I22*b2*d1*q2*q4 - 2*I11*I22*b2*d2*q1*q4 + 2*I11*I22*b3*d1*q3*q4 + 2*I11*I33*b1*d1*q1*q4 - 2*I11*I33*b1*d3*q1*q2 - 2*I11*I33*b2*d1*q1*q3 + 2*I11*I33*b3*d1*q1*q2 + 2*I11*I33*b3*d3*q1*q4 - 2*I22*I33*b1*d2*q1*q3 + 4*I22*I33*b1*d3*q1*q2 + 4*I22*I33*b1*d2*q2*q4 - 2*I22*I33*b2*d2*q1*q4 - 4*I22*I33*b2*d2*q2*q3 + 2*I22*I33*b1*d3*q3*q4 - 2*I22*I33*b3*d3*q1*q4 + 4*I22*I33*b3*d3*q2*q3 - 4*I11*I22*I33*q2*q3*q1_dot^2 - 4*I11*I22*I33*q2*q3*q2_dot^2 - 4*I11*I22*I33*q2*q3*q4_dot^2 + 2*I11*I22*I33*q1^2*q2_dot*q3_dot + 6*I11*I22*I33*q2^2*q2_dot*q3_dot + 2*I11*I22*I33*q3^2*q2_dot*q3_dot + 2*I11*I22*I33*q4^2*q2_dot*q3_dot + 4*I11*I22*I33*q1*q2*q1_dot*q3_dot + 4*I11*I22*I33*q2*q4*q3_dot*q4_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) + (q2*(I11*I22*b1*d2*q4^3 - I11*I22*b2*d1*q4^3 - I11*I33*b1*d3*q1^3 - I11*I33*b3*d1*q1^3 - I22*I33*b2*d3*q2^3 - I22*I33*b3*d2*q2^3 + 2*I11*I22*I33*q3^3*q1_dot^2 + 2*I11*I22*I33*q3^3*q2_dot^2 + 2*I11*I22*I33*q3^3*q4_dot^2 + 2*I11*I22*I33*q1^2*q3*q1_dot^2 + 2*I11*I22*I33*q1^2*q3*q2_dot^2 + 2*I11*I22*I33*q2^2*q3*q1_dot^2 + 2*I11*I22*I33*q2^2*q3*q2_dot^2 + 2*I11*I22*I33*q3*q4^2*q1_dot^2 + 2*I11*I22*I33*q1^2*q3*q4_dot^2 + 2*I11*I22*I33*q3*q4^2*q2_dot^2 + 2*I11*I22*I33*q2^2*q3*q4_dot^2 + 2*I11*I22*I33*q3*q4^2*q4_dot^2 - 2*I11*I22*I33*q1^3*q1_dot*q3_dot - 2*I11*I22*I33*q2^3*q2_dot*q3_dot - 2*I11*I22*I33*q4^3*q3_dot*q4_dot + I11*I22*b1*d2*q1^2*q4 + I11*I22*b2*d1*q1^2*q4 - 2*I11*I22*b1*d1*q3*q4^2 - I11*I22*b1*d2*q2^2*q4 - I11*I22*b2*d1*q2^2*q4 + 2*I11*I22*b3*d1*q1*q4^2 - I11*I22*b1*d2*q3^2*q4 + I11*I22*b2*d1*q3^2*q4 - 2*I11*I22*b2*d2*q3*q4^2 + 2*I11*I22*b3*d2*q2*q4^2 + 2*I11*I33*b1*d1*q1^2*q3 + I11*I33*b1*d3*q1*q2^2 - I11*I33*b3*d1*q1*q2^2 + I11*I33*b1*d3*q1*q3^2 + 2*I11*I33*b2*d1*q1^2*q4 - 2*I11*I33*b2*d3*q1^2*q2 + I11*I33*b3*d1*q1*q3^2 - I11*I33*b1*d3*q1*q4^2 + I11*I33*b3*d1*q1*q4^2 - 2*I11*I33*b3*d3*q1^2*q3 - 2*I22*I33*b1*d3*q1*q2^2 + I22*I33*b2*d3*q1^2*q2 - I22*I33*b3*d2*q1^2*q2 - 2*I22*I33*b1*d2*q2^2*q4 + 2*I22*I33*b2*d2*q2^2*q3 + I22*I33*b2*d3*q2*q3^2 + I22*I33*b3*d2*q2*q3^2 - I22*I33*b2*d3*q2*q4^2 + I22*I33*b3*d2*q2*q4^2 - 2*I22*I33*b3*d3*q2^2*q3 - 2*I11*I22*b1*d1*q1*q2*q4 + 2*I11*I22*b2*d2*q1*q2*q4 - 2*I11*I22*b3*d1*q2*q3*q4 + 2*I11*I22*b3*d2*q1*q3*q4 - 2*I11*I33*b1*d1*q1*q2*q4 + 2*I11*I33*b2*d1*q1*q2*q3 + 2*I11*I33*b2*d3*q1*q3*q4 - 2*I11*I33*b3*d3*q1*q2*q4 + 2*I22*I33*b1*d2*q1*q2*q3 + 2*I22*I33*b2*d2*q1*q2*q4 - 2*I22*I33*b1*d3*q2*q3*q4 + 2*I22*I33*b3*d3*q1*q2*q4 - 2*I11*I22*I33*q1*q2^2*q1_dot*q3_dot - 2*I11*I22*I33*q1*q3^2*q1_dot*q3_dot - 2*I11*I22*I33*q1^2*q2*q2_dot*q3_dot - 2*I11*I22*I33*q1*q4^2*q1_dot*q3_dot - 2*I11*I22*I33*q2*q3^2*q2_dot*q3_dot - 2*I11*I22*I33*q2*q4^2*q2_dot*q3_dot - 2*I11*I22*I33*q1^2*q4*q3_dot*q4_dot - 2*I11*I22*I33*q2^2*q4*q3_dot*q4_dot - 2*I11*I22*I33*q3^2*q4*q3_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(7, 3)
(q3*(I11*I22*b1*d2*q4^3 - I11*I22*b2*d1*q4^3 - I11*I33*b1*d3*q1^3 - I11*I33*b3*d1*q1^3 - I22*I33*b2*d3*q2^3 - I22*I33*b3*d2*q2^3 + 2*I11*I22*I33*q3^3*q1_dot^2 + 2*I11*I22*I33*q3^3*q2_dot^2 + 2*I11*I22*I33*q3^3*q4_dot^2 + 2*I11*I22*I33*q1^2*q3*q1_dot^2 + 2*I11*I22*I33*q1^2*q3*q2_dot^2 + 2*I11*I22*I33*q2^2*q3*q1_dot^2 + 2*I11*I22*I33*q2^2*q3*q2_dot^2 + 2*I11*I22*I33*q3*q4^2*q1_dot^2 + 2*I11*I22*I33*q1^2*q3*q4_dot^2 + 2*I11*I22*I33*q3*q4^2*q2_dot^2 + 2*I11*I22*I33*q2^2*q3*q4_dot^2 + 2*I11*I22*I33*q3*q4^2*q4_dot^2 - 2*I11*I22*I33*q1^3*q1_dot*q3_dot - 2*I11*I22*I33*q2^3*q2_dot*q3_dot - 2*I11*I22*I33*q4^3*q3_dot*q4_dot + I11*I22*b1*d2*q1^2*q4 + I11*I22*b2*d1*q1^2*q4 - 2*I11*I22*b1*d1*q3*q4^2 - I11*I22*b1*d2*q2^2*q4 - I11*I22*b2*d1*q2^2*q4 + 2*I11*I22*b3*d1*q1*q4^2 - I11*I22*b1*d2*q3^2*q4 + I11*I22*b2*d1*q3^2*q4 - 2*I11*I22*b2*d2*q3*q4^2 + 2*I11*I22*b3*d2*q2*q4^2 + 2*I11*I33*b1*d1*q1^2*q3 + I11*I33*b1*d3*q1*q2^2 - I11*I33*b3*d1*q1*q2^2 + I11*I33*b1*d3*q1*q3^2 + 2*I11*I33*b2*d1*q1^2*q4 - 2*I11*I33*b2*d3*q1^2*q2 + I11*I33*b3*d1*q1*q3^2 - I11*I33*b1*d3*q1*q4^2 + I11*I33*b3*d1*q1*q4^2 - 2*I11*I33*b3*d3*q1^2*q3 - 2*I22*I33*b1*d3*q1*q2^2 + I22*I33*b2*d3*q1^2*q2 - I22*I33*b3*d2*q1^2*q2 - 2*I22*I33*b1*d2*q2^2*q4 + 2*I22*I33*b2*d2*q2^2*q3 + I22*I33*b2*d3*q2*q3^2 + I22*I33*b3*d2*q2*q3^2 - I22*I33*b2*d3*q2*q4^2 + I22*I33*b3*d2*q2*q4^2 - 2*I22*I33*b3*d3*q2^2*q3 - 2*I11*I22*b1*d1*q1*q2*q4 + 2*I11*I22*b2*d2*q1*q2*q4 - 2*I11*I22*b3*d1*q2*q3*q4 + 2*I11*I22*b3*d2*q1*q3*q4 - 2*I11*I33*b1*d1*q1*q2*q4 + 2*I11*I33*b2*d1*q1*q2*q3 + 2*I11*I33*b2*d3*q1*q3*q4 - 2*I11*I33*b3*d3*q1*q2*q4 + 2*I22*I33*b1*d2*q1*q2*q3 + 2*I22*I33*b2*d2*q1*q2*q4 - 2*I22*I33*b1*d3*q2*q3*q4 + 2*I22*I33*b3*d3*q1*q2*q4 - 2*I11*I22*I33*q1*q2^2*q1_dot*q3_dot - 2*I11*I22*I33*q1*q3^2*q1_dot*q3_dot - 2*I11*I22*I33*q1^2*q2*q2_dot*q3_dot - 2*I11*I22*I33*q1*q4^2*q1_dot*q3_dot - 2*I11*I22*I33*q2*q3^2*q2_dot*q3_dot - 2*I11*I22*I33*q2*q4^2*q2_dot*q3_dot - 2*I11*I22*I33*q1^2*q4*q3_dot*q4_dot - 2*I11*I22*I33*q2^2*q4*q3_dot*q4_dot - 2*I11*I22*I33*q3^2*q4*q3_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2) - (I11*I33*b1*d1*q1^2 - I11*I22*b2*d2*q4^2 - I11*I22*b1*d1*q4^2 - I11*I33*b3*d3*q1^2 + I22*I33*b2*d2*q2^2 - I22*I33*b3*d3*q2^2 + I11*I22*I33*q1^2*q1_dot^2 + I11*I22*I33*q1^2*q2_dot^2 + I11*I22*I33*q2^2*q1_dot^2 + I11*I22*I33*q2^2*q2_dot^2 + 3*I11*I22*I33*q3^2*q1_dot^2 + I11*I22*I33*q1^2*q4_dot^2 + 3*I11*I22*I33*q3^2*q2_dot^2 + I11*I22*I33*q4^2*q1_dot^2 + I11*I22*I33*q2^2*q4_dot^2 + I11*I22*I33*q4^2*q2_dot^2 + 3*I11*I22*I33*q3^2*q4_dot^2 + I11*I22*I33*q4^2*q4_dot^2 - I11*I22*b1*d2*q3*q4 + I11*I22*b2*d1*q3*q4 - I11*I22*b3*d1*q2*q4 + I11*I22*b3*d2*q1*q4 + I11*I33*b2*d1*q1*q2 + I11*I33*b1*d3*q1*q3 + I11*I33*b3*d1*q1*q3 + I11*I33*b2*d3*q1*q4 + I22*I33*b1*d2*q1*q2 - I22*I33*b1*d3*q2*q4 + I22*I33*b2*d3*q2*q3 + I22*I33*b3*d2*q2*q3 - 2*I11*I22*I33*q1*q3*q1_dot*q3_dot - 2*I11*I22*I33*q2*q3*q2_dot*q3_dot - 2*I11*I22*I33*q3*q4*q3_dot*q4_dot)/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2))




F(7, 4)
(I11*I22*b1*d2*q2^2 - I11*I22*b2*d1*q1^2 - I11*I22*b1*d2*q1^2 + I11*I22*b2*d1*q2^2 + I11*I22*b1*d2*q3^2 - I11*I22*b2*d1*q3^2 - 3*I11*I22*b1*d2*q4^2 + 3*I11*I22*b2*d1*q4^2 - 2*I11*I33*b2*d1*q1^2 + 2*I22*I33*b1*d2*q2^2 + 2*I11*I22*b1*d1*q1*q2 - 2*I11*I22*b2*d2*q1*q2 + 4*I11*I22*b1*d1*q3*q4 - 4*I11*I22*b3*d1*q1*q4 + 2*I11*I22*b3*d1*q2*q3 - 2*I11*I22*b3*d2*q1*q3 + 4*I11*I22*b2*d2*q3*q4 - 4*I11*I22*b3*d2*q2*q4 + 2*I11*I33*b1*d1*q1*q2 + 2*I11*I33*b1*d3*q1*q4 - 2*I11*I33*b2*d3*q1*q3 - 2*I11*I33*b3*d1*q1*q4 + 2*I11*I33*b3*d3*q1*q2 - 2*I22*I33*b2*d2*q1*q2 + 2*I22*I33*b1*d3*q2*q3 - 2*I22*I33*b3*d3*q1*q2 + 2*I22*I33*b2*d3*q2*q4 - 2*I22*I33*b3*d2*q2*q4 - 4*I11*I22*I33*q3*q4*q1_dot^2 - 4*I11*I22*I33*q3*q4*q2_dot^2 - 4*I11*I22*I33*q3*q4*q4_dot^2 + 2*I11*I22*I33*q1^2*q3_dot*q4_dot + 2*I11*I22*I33*q2^2*q3_dot*q4_dot + 2*I11*I22*I33*q3^2*q3_dot*q4_dot + 6*I11*I22*I33*q4^2*q3_dot*q4_dot + 4*I11*I22*I33*q1*q4*q1_dot*q3_dot + 4*I11*I22*I33*q2*q4*q2_dot*q3_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) + (q4*(I11*I22*b1*d2*q4^3 - I11*I22*b2*d1*q4^3 - I11*I33*b1*d3*q1^3 - I11*I33*b3*d1*q1^3 - I22*I33*b2*d3*q2^3 - I22*I33*b3*d2*q2^3 + 2*I11*I22*I33*q3^3*q1_dot^2 + 2*I11*I22*I33*q3^3*q2_dot^2 + 2*I11*I22*I33*q3^3*q4_dot^2 + 2*I11*I22*I33*q1^2*q3*q1_dot^2 + 2*I11*I22*I33*q1^2*q3*q2_dot^2 + 2*I11*I22*I33*q2^2*q3*q1_dot^2 + 2*I11*I22*I33*q2^2*q3*q2_dot^2 + 2*I11*I22*I33*q3*q4^2*q1_dot^2 + 2*I11*I22*I33*q1^2*q3*q4_dot^2 + 2*I11*I22*I33*q3*q4^2*q2_dot^2 + 2*I11*I22*I33*q2^2*q3*q4_dot^2 + 2*I11*I22*I33*q3*q4^2*q4_dot^2 - 2*I11*I22*I33*q1^3*q1_dot*q3_dot - 2*I11*I22*I33*q2^3*q2_dot*q3_dot - 2*I11*I22*I33*q4^3*q3_dot*q4_dot + I11*I22*b1*d2*q1^2*q4 + I11*I22*b2*d1*q1^2*q4 - 2*I11*I22*b1*d1*q3*q4^2 - I11*I22*b1*d2*q2^2*q4 - I11*I22*b2*d1*q2^2*q4 + 2*I11*I22*b3*d1*q1*q4^2 - I11*I22*b1*d2*q3^2*q4 + I11*I22*b2*d1*q3^2*q4 - 2*I11*I22*b2*d2*q3*q4^2 + 2*I11*I22*b3*d2*q2*q4^2 + 2*I11*I33*b1*d1*q1^2*q3 + I11*I33*b1*d3*q1*q2^2 - I11*I33*b3*d1*q1*q2^2 + I11*I33*b1*d3*q1*q3^2 + 2*I11*I33*b2*d1*q1^2*q4 - 2*I11*I33*b2*d3*q1^2*q2 + I11*I33*b3*d1*q1*q3^2 - I11*I33*b1*d3*q1*q4^2 + I11*I33*b3*d1*q1*q4^2 - 2*I11*I33*b3*d3*q1^2*q3 - 2*I22*I33*b1*d3*q1*q2^2 + I22*I33*b2*d3*q1^2*q2 - I22*I33*b3*d2*q1^2*q2 - 2*I22*I33*b1*d2*q2^2*q4 + 2*I22*I33*b2*d2*q2^2*q3 + I22*I33*b2*d3*q2*q3^2 + I22*I33*b3*d2*q2*q3^2 - I22*I33*b2*d3*q2*q4^2 + I22*I33*b3*d2*q2*q4^2 - 2*I22*I33*b3*d3*q2^2*q3 - 2*I11*I22*b1*d1*q1*q2*q4 + 2*I11*I22*b2*d2*q1*q2*q4 - 2*I11*I22*b3*d1*q2*q3*q4 + 2*I11*I22*b3*d2*q1*q3*q4 - 2*I11*I33*b1*d1*q1*q2*q4 + 2*I11*I33*b2*d1*q1*q2*q3 + 2*I11*I33*b2*d3*q1*q3*q4 - 2*I11*I33*b3*d3*q1*q2*q4 + 2*I22*I33*b1*d2*q1*q2*q3 + 2*I22*I33*b2*d2*q1*q2*q4 - 2*I22*I33*b1*d3*q2*q3*q4 + 2*I22*I33*b3*d3*q1*q2*q4 - 2*I11*I22*I33*q1*q2^2*q1_dot*q3_dot - 2*I11*I22*I33*q1*q3^2*q1_dot*q3_dot - 2*I11*I22*I33*q1^2*q2*q2_dot*q3_dot - 2*I11*I22*I33*q1*q4^2*q1_dot*q3_dot - 2*I11*I22*I33*q2*q3^2*q2_dot*q3_dot - 2*I11*I22*I33*q2*q4^2*q2_dot*q3_dot - 2*I11*I22*I33*q1^2*q4*q3_dot*q4_dot - 2*I11*I22*I33*q2^2*q4*q3_dot*q4_dot - 2*I11*I22*I33*q3^2*q4*q3_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(7, 5)
q1*q3_dot - 2*q3*q1_dot




F(7, 6)
q2*q3_dot - 2*q3*q2_dot




F(7, 7)
q1*q1_dot + q2*q2_dot + q4*q4_dot




F(7, 8)
q4*q3_dot - 2*q3*q4_dot




F(8, 1)
(2*I11*I22*b3*d2*q3^2 - 2*I11*I33*b2*d3*q2^2 - 3*I22*I33*b2*d3*q1^2 + 3*I22*I33*b3*d2*q1^2 + I22*I33*b2*d3*q2^2 + I22*I33*b3*d2*q2^2 - I22*I33*b2*d3*q3^2 - I22*I33*b3*d2*q3^2 + I22*I33*b2*d3*q4^2 - I22*I33*b3*d2*q4^2 - 2*I11*I22*b1*d1*q2*q3 + 2*I11*I22*b1*d2*q1*q3 + 2*I11*I22*b2*d1*q1*q3 + 2*I11*I22*b2*d2*q2*q3 + 2*I11*I22*b3*d1*q3*q4 + 2*I11*I33*b1*d1*q2*q3 - 2*I11*I33*b1*d3*q1*q2 - 2*I11*I33*b3*d1*q1*q2 + 2*I11*I33*b2*d1*q2*q4 - 2*I11*I33*b3*d3*q2*q3 - 4*I22*I33*b1*d2*q1*q3 + 4*I22*I33*b1*d3*q1*q2 + 2*I22*I33*b1*d2*q2*q4 - 4*I22*I33*b2*d2*q1*q4 - 2*I22*I33*b2*d2*q2*q3 + 2*I22*I33*b1*d3*q3*q4 - 4*I22*I33*b3*d3*q1*q4 + 2*I22*I33*b3*d3*q2*q3 - 4*I11*I22*I33*q1*q4*q1_dot^2 - 4*I11*I22*I33*q1*q4*q2_dot^2 - 4*I11*I22*I33*q1*q4*q3_dot^2 + 6*I11*I22*I33*q1^2*q1_dot*q4_dot + 2*I11*I22*I33*q2^2*q1_dot*q4_dot + 2*I11*I22*I33*q3^2*q1_dot*q4_dot + 2*I11*I22*I33*q4^2*q1_dot*q4_dot + 4*I11*I22*I33*q1*q2*q2_dot*q4_dot + 4*I11*I22*I33*q1*q3*q3_dot*q4_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) + (q1*(I11*I22*b1*d2*q3^3 - I11*I22*b2*d1*q3^3 - I11*I33*b1*d3*q2^3 + I11*I33*b3*d1*q2^3 + I22*I33*b2*d3*q1^3 - I22*I33*b3*d2*q1^3 + 2*I11*I22*I33*q4^3*q1_dot^2 + 2*I11*I22*I33*q4^3*q2_dot^2 + 2*I11*I22*I33*q4^3*q3_dot^2 + 2*I11*I22*I33*q1^2*q4*q1_dot^2 + 2*I11*I22*I33*q1^2*q4*q2_dot^2 + 2*I11*I22*I33*q2^2*q4*q1_dot^2 + 2*I11*I22*I33*q1^2*q4*q3_dot^2 + 2*I11*I22*I33*q2^2*q4*q2_dot^2 + 2*I11*I22*I33*q3^2*q4*q1_dot^2 + 2*I11*I22*I33*q2^2*q4*q3_dot^2 + 2*I11*I22*I33*q3^2*q4*q2_dot^2 + 2*I11*I22*I33*q3^2*q4*q3_dot^2 - 2*I11*I22*I33*q1^3*q1_dot*q4_dot - 2*I11*I22*I33*q2^3*q2_dot*q4_dot - 2*I11*I22*I33*q3^3*q3_dot*q4_dot - I11*I22*b1*d2*q1^2*q3 - I11*I22*b2*d1*q1^2*q3 + I11*I22*b1*d2*q2^2*q3 + I11*I22*b2*d1*q2^2*q3 + 2*I11*I22*b1*d1*q3^2*q4 + 2*I11*I22*b3*d1*q2*q3^2 - 2*I11*I22*b3*d2*q1*q3^2 - I11*I22*b1*d2*q3*q4^2 + I11*I22*b2*d1*q3*q4^2 + 2*I11*I22*b2*d2*q3^2*q4 + I11*I33*b1*d3*q1^2*q2 + I11*I33*b3*d1*q1^2*q2 + 2*I11*I33*b1*d1*q2^2*q4 - 2*I11*I33*b2*d1*q2^2*q3 + 2*I11*I33*b2*d3*q1*q2^2 - I11*I33*b1*d3*q2*q3^2 - I11*I33*b3*d1*q2*q3^2 + I11*I33*b1*d3*q2*q4^2 - I11*I33*b3*d1*q2*q4^2 + 2*I11*I33*b3*d3*q2^2*q4 + 2*I22*I33*b1*d2*q1^2*q3 - 2*I22*I33*b1*d3*q1^2*q2 - I22*I33*b2*d3*q1*q2^2 - I22*I33*b3*d2*q1*q2^2 + 2*I22*I33*b2*d2*q1^2*q4 + I22*I33*b2*d3*q1*q3^2 + I22*I33*b3*d2*q1*q3^2 - I22*I33*b2*d3*q1*q4^2 + I22*I33*b3*d2*q1*q4^2 + 2*I22*I33*b3*d3*q1^2*q4 + 2*I11*I22*b1*d1*q1*q2*q3 - 2*I11*I22*b2*d2*q1*q2*q3 - 2*I11*I22*b3*d1*q1*q3*q4 - 2*I11*I22*b3*d2*q2*q3*q4 - 2*I11*I33*b1*d1*q1*q2*q3 - 2*I11*I33*b2*d1*q1*q2*q4 + 2*I11*I33*b3*d3*q1*q2*q3 - 2*I11*I33*b2*d3*q2*q3*q4 - 2*I22*I33*b1*d2*q1*q2*q4 + 2*I22*I33*b2*d2*q1*q2*q3 - 2*I22*I33*b1*d3*q1*q3*q4 - 2*I22*I33*b3*d3*q1*q2*q3 - 2*I11*I22*I33*q1*q2^2*q1_dot*q4_dot - 2*I11*I22*I33*q1*q3^2*q1_dot*q4_dot - 2*I11*I22*I33*q1^2*q2*q2_dot*q4_dot - 2*I11*I22*I33*q1*q4^2*q1_dot*q4_dot - 2*I11*I22*I33*q2*q3^2*q2_dot*q4_dot - 2*I11*I22*I33*q1^2*q3*q3_dot*q4_dot - 2*I11*I22*I33*q2*q4^2*q2_dot*q4_dot - 2*I11*I22*I33*q2^2*q3*q3_dot*q4_dot - 2*I11*I22*I33*q3*q4^2*q3_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(8, 2)
(3*I11*I33*b1*d3*q2^2 - I11*I33*b1*d3*q1^2 - I11*I33*b3*d1*q1^2 - 2*I11*I22*b3*d1*q3^2 - 3*I11*I33*b3*d1*q2^2 + I11*I33*b1*d3*q3^2 + I11*I33*b3*d1*q3^2 - I11*I33*b1*d3*q4^2 + I11*I33*b3*d1*q4^2 + 2*I22*I33*b1*d3*q1^2 - 2*I11*I22*b1*d1*q1*q3 - 2*I11*I22*b1*d2*q2*q3 - 2*I11*I22*b2*d1*q2*q3 + 2*I11*I22*b2*d2*q1*q3 + 2*I11*I22*b3*d2*q3*q4 + 2*I11*I33*b1*d1*q1*q3 - 4*I11*I33*b1*d1*q2*q4 + 2*I11*I33*b2*d1*q1*q4 + 4*I11*I33*b2*d1*q2*q3 - 4*I11*I33*b2*d3*q1*q2 - 2*I11*I33*b3*d3*q1*q3 + 2*I11*I33*b2*d3*q3*q4 - 4*I11*I33*b3*d3*q2*q4 + 2*I22*I33*b1*d2*q1*q4 - 2*I22*I33*b2*d2*q1*q3 + 2*I22*I33*b2*d3*q1*q2 + 2*I22*I33*b3*d2*q1*q2 + 2*I22*I33*b3*d3*q1*q3 - 4*I11*I22*I33*q2*q4*q1_dot^2 - 4*I11*I22*I33*q2*q4*q2_dot^2 - 4*I11*I22*I33*q2*q4*q3_dot^2 + 2*I11*I22*I33*q1^2*q2_dot*q4_dot + 6*I11*I22*I33*q2^2*q2_dot*q4_dot + 2*I11*I22*I33*q3^2*q2_dot*q4_dot + 2*I11*I22*I33*q4^2*q2_dot*q4_dot + 4*I11*I22*I33*q1*q2*q1_dot*q4_dot + 4*I11*I22*I33*q2*q3*q3_dot*q4_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) + (q2*(I11*I22*b1*d2*q3^3 - I11*I22*b2*d1*q3^3 - I11*I33*b1*d3*q2^3 + I11*I33*b3*d1*q2^3 + I22*I33*b2*d3*q1^3 - I22*I33*b3*d2*q1^3 + 2*I11*I22*I33*q4^3*q1_dot^2 + 2*I11*I22*I33*q4^3*q2_dot^2 + 2*I11*I22*I33*q4^3*q3_dot^2 + 2*I11*I22*I33*q1^2*q4*q1_dot^2 + 2*I11*I22*I33*q1^2*q4*q2_dot^2 + 2*I11*I22*I33*q2^2*q4*q1_dot^2 + 2*I11*I22*I33*q1^2*q4*q3_dot^2 + 2*I11*I22*I33*q2^2*q4*q2_dot^2 + 2*I11*I22*I33*q3^2*q4*q1_dot^2 + 2*I11*I22*I33*q2^2*q4*q3_dot^2 + 2*I11*I22*I33*q3^2*q4*q2_dot^2 + 2*I11*I22*I33*q3^2*q4*q3_dot^2 - 2*I11*I22*I33*q1^3*q1_dot*q4_dot - 2*I11*I22*I33*q2^3*q2_dot*q4_dot - 2*I11*I22*I33*q3^3*q3_dot*q4_dot - I11*I22*b1*d2*q1^2*q3 - I11*I22*b2*d1*q1^2*q3 + I11*I22*b1*d2*q2^2*q3 + I11*I22*b2*d1*q2^2*q3 + 2*I11*I22*b1*d1*q3^2*q4 + 2*I11*I22*b3*d1*q2*q3^2 - 2*I11*I22*b3*d2*q1*q3^2 - I11*I22*b1*d2*q3*q4^2 + I11*I22*b2*d1*q3*q4^2 + 2*I11*I22*b2*d2*q3^2*q4 + I11*I33*b1*d3*q1^2*q2 + I11*I33*b3*d1*q1^2*q2 + 2*I11*I33*b1*d1*q2^2*q4 - 2*I11*I33*b2*d1*q2^2*q3 + 2*I11*I33*b2*d3*q1*q2^2 - I11*I33*b1*d3*q2*q3^2 - I11*I33*b3*d1*q2*q3^2 + I11*I33*b1*d3*q2*q4^2 - I11*I33*b3*d1*q2*q4^2 + 2*I11*I33*b3*d3*q2^2*q4 + 2*I22*I33*b1*d2*q1^2*q3 - 2*I22*I33*b1*d3*q1^2*q2 - I22*I33*b2*d3*q1*q2^2 - I22*I33*b3*d2*q1*q2^2 + 2*I22*I33*b2*d2*q1^2*q4 + I22*I33*b2*d3*q1*q3^2 + I22*I33*b3*d2*q1*q3^2 - I22*I33*b2*d3*q1*q4^2 + I22*I33*b3*d2*q1*q4^2 + 2*I22*I33*b3*d3*q1^2*q4 + 2*I11*I22*b1*d1*q1*q2*q3 - 2*I11*I22*b2*d2*q1*q2*q3 - 2*I11*I22*b3*d1*q1*q3*q4 - 2*I11*I22*b3*d2*q2*q3*q4 - 2*I11*I33*b1*d1*q1*q2*q3 - 2*I11*I33*b2*d1*q1*q2*q4 + 2*I11*I33*b3*d3*q1*q2*q3 - 2*I11*I33*b2*d3*q2*q3*q4 - 2*I22*I33*b1*d2*q1*q2*q4 + 2*I22*I33*b2*d2*q1*q2*q3 - 2*I22*I33*b1*d3*q1*q3*q4 - 2*I22*I33*b3*d3*q1*q2*q3 - 2*I11*I22*I33*q1*q2^2*q1_dot*q4_dot - 2*I11*I22*I33*q1*q3^2*q1_dot*q4_dot - 2*I11*I22*I33*q1^2*q2*q2_dot*q4_dot - 2*I11*I22*I33*q1*q4^2*q1_dot*q4_dot - 2*I11*I22*I33*q2*q3^2*q2_dot*q4_dot - 2*I11*I22*I33*q1^2*q3*q3_dot*q4_dot - 2*I11*I22*I33*q2*q4^2*q2_dot*q4_dot - 2*I11*I22*I33*q2^2*q3*q3_dot*q4_dot - 2*I11*I22*I33*q3*q4^2*q3_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(8, 3)
(I11*I22*b1*d2*q1^2 + I11*I22*b2*d1*q1^2 - I11*I22*b1*d2*q2^2 - I11*I22*b2*d1*q2^2 - 3*I11*I22*b1*d2*q3^2 + 3*I11*I22*b2*d1*q3^2 + I11*I22*b1*d2*q4^2 - I11*I22*b2*d1*q4^2 + 2*I11*I33*b2*d1*q2^2 - 2*I22*I33*b1*d2*q1^2 - 2*I11*I22*b1*d1*q1*q2 + 2*I11*I22*b2*d2*q1*q2 - 4*I11*I22*b1*d1*q3*q4 + 2*I11*I22*b3*d1*q1*q4 - 4*I11*I22*b3*d1*q2*q3 + 4*I11*I22*b3*d2*q1*q3 - 4*I11*I22*b2*d2*q3*q4 + 2*I11*I22*b3*d2*q2*q4 + 2*I11*I33*b1*d1*q1*q2 + 2*I11*I33*b1*d3*q2*q3 + 2*I11*I33*b3*d1*q2*q3 - 2*I11*I33*b3*d3*q1*q2 + 2*I11*I33*b2*d3*q2*q4 - 2*I22*I33*b2*d2*q1*q2 + 2*I22*I33*b1*d3*q1*q4 - 2*I22*I33*b2*d3*q1*q3 - 2*I22*I33*b3*d2*q1*q3 + 2*I22*I33*b3*d3*q1*q2 - 4*I11*I22*I33*q3*q4*q1_dot^2 - 4*I11*I22*I33*q3*q4*q2_dot^2 - 4*I11*I22*I33*q3*q4*q3_dot^2 + 2*I11*I22*I33*q1^2*q3_dot*q4_dot + 2*I11*I22*I33*q2^2*q3_dot*q4_dot + 6*I11*I22*I33*q3^2*q3_dot*q4_dot + 2*I11*I22*I33*q4^2*q3_dot*q4_dot + 4*I11*I22*I33*q1*q3*q1_dot*q4_dot + 4*I11*I22*I33*q2*q3*q2_dot*q4_dot)/(2*I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)) + (q3*(I11*I22*b1*d2*q3^3 - I11*I22*b2*d1*q3^3 - I11*I33*b1*d3*q2^3 + I11*I33*b3*d1*q2^3 + I22*I33*b2*d3*q1^3 - I22*I33*b3*d2*q1^3 + 2*I11*I22*I33*q4^3*q1_dot^2 + 2*I11*I22*I33*q4^3*q2_dot^2 + 2*I11*I22*I33*q4^3*q3_dot^2 + 2*I11*I22*I33*q1^2*q4*q1_dot^2 + 2*I11*I22*I33*q1^2*q4*q2_dot^2 + 2*I11*I22*I33*q2^2*q4*q1_dot^2 + 2*I11*I22*I33*q1^2*q4*q3_dot^2 + 2*I11*I22*I33*q2^2*q4*q2_dot^2 + 2*I11*I22*I33*q3^2*q4*q1_dot^2 + 2*I11*I22*I33*q2^2*q4*q3_dot^2 + 2*I11*I22*I33*q3^2*q4*q2_dot^2 + 2*I11*I22*I33*q3^2*q4*q3_dot^2 - 2*I11*I22*I33*q1^3*q1_dot*q4_dot - 2*I11*I22*I33*q2^3*q2_dot*q4_dot - 2*I11*I22*I33*q3^3*q3_dot*q4_dot - I11*I22*b1*d2*q1^2*q3 - I11*I22*b2*d1*q1^2*q3 + I11*I22*b1*d2*q2^2*q3 + I11*I22*b2*d1*q2^2*q3 + 2*I11*I22*b1*d1*q3^2*q4 + 2*I11*I22*b3*d1*q2*q3^2 - 2*I11*I22*b3*d2*q1*q3^2 - I11*I22*b1*d2*q3*q4^2 + I11*I22*b2*d1*q3*q4^2 + 2*I11*I22*b2*d2*q3^2*q4 + I11*I33*b1*d3*q1^2*q2 + I11*I33*b3*d1*q1^2*q2 + 2*I11*I33*b1*d1*q2^2*q4 - 2*I11*I33*b2*d1*q2^2*q3 + 2*I11*I33*b2*d3*q1*q2^2 - I11*I33*b1*d3*q2*q3^2 - I11*I33*b3*d1*q2*q3^2 + I11*I33*b1*d3*q2*q4^2 - I11*I33*b3*d1*q2*q4^2 + 2*I11*I33*b3*d3*q2^2*q4 + 2*I22*I33*b1*d2*q1^2*q3 - 2*I22*I33*b1*d3*q1^2*q2 - I22*I33*b2*d3*q1*q2^2 - I22*I33*b3*d2*q1*q2^2 + 2*I22*I33*b2*d2*q1^2*q4 + I22*I33*b2*d3*q1*q3^2 + I22*I33*b3*d2*q1*q3^2 - I22*I33*b2*d3*q1*q4^2 + I22*I33*b3*d2*q1*q4^2 + 2*I22*I33*b3*d3*q1^2*q4 + 2*I11*I22*b1*d1*q1*q2*q3 - 2*I11*I22*b2*d2*q1*q2*q3 - 2*I11*I22*b3*d1*q1*q3*q4 - 2*I11*I22*b3*d2*q2*q3*q4 - 2*I11*I33*b1*d1*q1*q2*q3 - 2*I11*I33*b2*d1*q1*q2*q4 + 2*I11*I33*b3*d3*q1*q2*q3 - 2*I11*I33*b2*d3*q2*q3*q4 - 2*I22*I33*b1*d2*q1*q2*q4 + 2*I22*I33*b2*d2*q1*q2*q3 - 2*I22*I33*b1*d3*q1*q3*q4 - 2*I22*I33*b3*d3*q1*q2*q3 - 2*I11*I22*I33*q1*q2^2*q1_dot*q4_dot - 2*I11*I22*I33*q1*q3^2*q1_dot*q4_dot - 2*I11*I22*I33*q1^2*q2*q2_dot*q4_dot - 2*I11*I22*I33*q1*q4^2*q1_dot*q4_dot - 2*I11*I22*I33*q2*q3^2*q2_dot*q4_dot - 2*I11*I22*I33*q1^2*q3*q3_dot*q4_dot - 2*I11*I22*I33*q2*q4^2*q2_dot*q4_dot - 2*I11*I22*I33*q2^2*q3*q3_dot*q4_dot - 2*I11*I22*I33*q3*q4^2*q3_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2)




F(8, 4)
(q4*(I11*I22*b1*d2*q3^3 - I11*I22*b2*d1*q3^3 - I11*I33*b1*d3*q2^3 + I11*I33*b3*d1*q2^3 + I22*I33*b2*d3*q1^3 - I22*I33*b3*d2*q1^3 + 2*I11*I22*I33*q4^3*q1_dot^2 + 2*I11*I22*I33*q4^3*q2_dot^2 + 2*I11*I22*I33*q4^3*q3_dot^2 + 2*I11*I22*I33*q1^2*q4*q1_dot^2 + 2*I11*I22*I33*q1^2*q4*q2_dot^2 + 2*I11*I22*I33*q2^2*q4*q1_dot^2 + 2*I11*I22*I33*q1^2*q4*q3_dot^2 + 2*I11*I22*I33*q2^2*q4*q2_dot^2 + 2*I11*I22*I33*q3^2*q4*q1_dot^2 + 2*I11*I22*I33*q2^2*q4*q3_dot^2 + 2*I11*I22*I33*q3^2*q4*q2_dot^2 + 2*I11*I22*I33*q3^2*q4*q3_dot^2 - 2*I11*I22*I33*q1^3*q1_dot*q4_dot - 2*I11*I22*I33*q2^3*q2_dot*q4_dot - 2*I11*I22*I33*q3^3*q3_dot*q4_dot - I11*I22*b1*d2*q1^2*q3 - I11*I22*b2*d1*q1^2*q3 + I11*I22*b1*d2*q2^2*q3 + I11*I22*b2*d1*q2^2*q3 + 2*I11*I22*b1*d1*q3^2*q4 + 2*I11*I22*b3*d1*q2*q3^2 - 2*I11*I22*b3*d2*q1*q3^2 - I11*I22*b1*d2*q3*q4^2 + I11*I22*b2*d1*q3*q4^2 + 2*I11*I22*b2*d2*q3^2*q4 + I11*I33*b1*d3*q1^2*q2 + I11*I33*b3*d1*q1^2*q2 + 2*I11*I33*b1*d1*q2^2*q4 - 2*I11*I33*b2*d1*q2^2*q3 + 2*I11*I33*b2*d3*q1*q2^2 - I11*I33*b1*d3*q2*q3^2 - I11*I33*b3*d1*q2*q3^2 + I11*I33*b1*d3*q2*q4^2 - I11*I33*b3*d1*q2*q4^2 + 2*I11*I33*b3*d3*q2^2*q4 + 2*I22*I33*b1*d2*q1^2*q3 - 2*I22*I33*b1*d3*q1^2*q2 - I22*I33*b2*d3*q1*q2^2 - I22*I33*b3*d2*q1*q2^2 + 2*I22*I33*b2*d2*q1^2*q4 + I22*I33*b2*d3*q1*q3^2 + I22*I33*b3*d2*q1*q3^2 - I22*I33*b2*d3*q1*q4^2 + I22*I33*b3*d2*q1*q4^2 + 2*I22*I33*b3*d3*q1^2*q4 + 2*I11*I22*b1*d1*q1*q2*q3 - 2*I11*I22*b2*d2*q1*q2*q3 - 2*I11*I22*b3*d1*q1*q3*q4 - 2*I11*I22*b3*d2*q2*q3*q4 - 2*I11*I33*b1*d1*q1*q2*q3 - 2*I11*I33*b2*d1*q1*q2*q4 + 2*I11*I33*b3*d3*q1*q2*q3 - 2*I11*I33*b2*d3*q2*q3*q4 - 2*I22*I33*b1*d2*q1*q2*q4 + 2*I22*I33*b2*d2*q1*q2*q3 - 2*I22*I33*b1*d3*q1*q3*q4 - 2*I22*I33*b3*d3*q1*q2*q3 - 2*I11*I22*I33*q1*q2^2*q1_dot*q4_dot - 2*I11*I22*I33*q1*q3^2*q1_dot*q4_dot - 2*I11*I22*I33*q1^2*q2*q2_dot*q4_dot - 2*I11*I22*I33*q1*q4^2*q1_dot*q4_dot - 2*I11*I22*I33*q2*q3^2*q2_dot*q4_dot - 2*I11*I22*I33*q1^2*q3*q3_dot*q4_dot - 2*I11*I22*I33*q2*q4^2*q2_dot*q4_dot - 2*I11*I22*I33*q2^2*q3*q3_dot*q4_dot - 2*I11*I22*I33*q3*q4^2*q3_dot*q4_dot))/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2)^2) - (I11*I22*b1*d1*q3^2 + I11*I22*b2*d2*q3^2 + I11*I33*b1*d1*q2^2 + I11*I33*b3*d3*q2^2 + I22*I33*b2*d2*q1^2 + I22*I33*b3*d3*q1^2 + I11*I22*I33*q1^2*q1_dot^2 + I11*I22*I33*q1^2*q2_dot^2 + I11*I22*I33*q2^2*q1_dot^2 + I11*I22*I33*q1^2*q3_dot^2 + I11*I22*I33*q2^2*q2_dot^2 + I11*I22*I33*q3^2*q1_dot^2 + I11*I22*I33*q2^2*q3_dot^2 + I11*I22*I33*q3^2*q2_dot^2 + 3*I11*I22*I33*q4^2*q1_dot^2 + I11*I22*I33*q3^2*q3_dot^2 + 3*I11*I22*I33*q4^2*q2_dot^2 + 3*I11*I22*I33*q4^2*q3_dot^2 - I11*I22*b3*d1*q1*q3 - I11*I22*b1*d2*q3*q4 + I11*I22*b2*d1*q3*q4 - I11*I22*b3*d2*q2*q3 - I11*I33*b2*d1*q1*q2 + I11*I33*b1*d3*q2*q4 - I11*I33*b2*d3*q2*q3 - I11*I33*b3*d1*q2*q4 - I22*I33*b1*d2*q1*q2 - I22*I33*b1*d3*q1*q3 - I22*I33*b2*d3*q1*q4 + I22*I33*b3*d2*q1*q4 - 2*I11*I22*I33*q1*q4*q1_dot*q4_dot - 2*I11*I22*I33*q2*q4*q2_dot*q4_dot - 2*I11*I22*I33*q3*q4*q3_dot*q4_dot)/(I11*I22*I33*(q1^2 + q2^2 + q3^2 + q4^2))




F(8, 5)
q1*q4_dot - 2*q4*q1_dot




F(8, 6)
q2*q4_dot - 2*q4*q2_dot




F(8, 7)
q3*q4_dot - 2*q4*q3_dot




F(8, 8)
q1*q1_dot + q2*q2_dot + q3*q3_dot




